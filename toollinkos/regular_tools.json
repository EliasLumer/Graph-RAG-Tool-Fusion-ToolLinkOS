[
    {
        "name": "share_location_via_email",
        "description": "Sends a geographical location to a given email address.",
        "parameters": [
            {
                "name": "email_address",
                "type": "string",
                "description": "The validated email address to send the location to.",
                "required": true
            },
            {
                "name": "location",
                "type": "string",
                "description": "The geographical location to share (e.g., coordinates or address).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email_address",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If a relative location is provided (ex. 'send my location'), it gets the user's current location."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "greet_user_in_language",
        "description": "Returns a greeting message tailored to the given language setting.",
        "parameters": [
            {
                "name": "language",
                "type": "string",
                "description": "The user's validated email address.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine the language in which to provide the greeting."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "advise_on_weather",
        "description": "Provides professional advice in a report based on the weather conditions at a specified location.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location for which to provide weather advice.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the current weather conditions for the specified location."
            },
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the current location if the user asks for a relative location."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "set_background_app_refresh",
        "description": "Activates background app refresh to keep applications updated with the latest content.",
        "parameters": [
            {
                "name": "on",
                "description": "Set to true to enable background app refresh or false to disable it.",
                "type": "bool",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_low_battery_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Background app refresh is disabled when low battery mode is on to conserve battery life."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "schedule_meeting",
        "description": "Schedules a meeting at a specified date and time with participants.",
        "parameters": [
            {
                "name": "date",
                "type": "string",
                "description": "The date of the meeting (format: YYYY-MM-DD).",
                "required": true
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time of the meeting (format: HH:MM:SS).",
                "required": true
            },
            {
                "name": "participants",
                "type": "list",
                "description": "A list of participant valid email addresses.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To ensure the meeting is scheduled for a future date."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "time",
                "reason": "To ensure the meeting time is valid and in the future."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "participants",
                "reason": "To validate each participant's email address."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "send_reminder_email",
        "description": "Sends a reminder email to a specified email address with a custom message.",
        "parameters": [
            {
                "name": "email_address",
                "type": "string",
                "description": "The email address to send the reminder to.",
                "required": true
            },
            {
                "name": "message",
                "type": "string",
                "description": "The reminder message to be sent.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email_address",
                "reason": "To ensure the provided email address is valid before sending."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearby_restaurants",
        "description": "Finds restaurants near a specified or current location, optionally filtered by cuisine type.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "cuisine_type",
                "type": "string",
                "description": "Type of cuisine to filter restaurants by.",
                "enum": [
                    "italian",
                    "mexican",
                    "chinese",
                    "japanese",
                    "indian",
                    "french",
                    "american",
                    "mediterranean",
                    "thai"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If no location is provided, it uses the user's current location."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "cuisine_type",
                "reason": "To optionally provide user preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "translate_text_to_language",
        "description": "Translates the provided text into the system's language setting.",
        "parameters": [
            {
                "name": "text",
                "type": "string",
                "description": "The text to be translated.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language to be translated.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To determine the target language for translation if not provided by user should default to the system language."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "backup_user_settings",
        "description": "Creates a backup of the user's application settings and preferences.",
        "parameters": [
            {
                "name": "id",
                "type": "string",
                "description": "A unique ID for the backup",
                "required": true
            },
            {
                "name": "user_settings",
                "type": "dict",
                "description": "The dictionary of user settings to be backed up.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the settings that need to be backed up."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To create a unique identifier for the backup file."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_secure_token",
        "description": "Generates a secure token using a unique ID and hashing.",
        "parameters": [
            {
                "name": "unique_id",
                "description": "A unique ID",
                "required": true,
                "type": "string"
            },
            {
                "name": "hash",
                "description": "A hashing string",
                "required": true,
                "type": "string"
            }
        ],
        "depends_on": [
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To create a unique base for the token."
            },
            {
                "name": "hash_string",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To hash the unique ID for added security."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "optimize_physical_performance",
        "description": "Adjusts physical settings for optimal performance, such as screen brightness, low battery mode, charging recommendations, etc.",
        "parameters": [
            {
                "name": "low_battery_mode_status_on",
                "description": "Whether the low battery mode is on (true) or off (false). Optional since battery status level is given as well.",
                "type": "bool",
                "required": false
            },
            {
                "name": "battery_status_level",
                "description": "The current battery level (between 0 and 100).",
                "type": "int",
                "required": true
            },
            {
                "name": "screen_brightness_level",
                "description": "The current brightness of the screen (between 0 and 100).",
                "type": "int",
                "required": true
            },
            {
                "name": "volume_level",
                "description": "The current volume level (between 0 and 100).",
                "type": "int",
                "required": true
            },
            {
                "name": "location_services_status_on",
                "description": "Whether the location services status is on (true) or off (false)",
                "required": true,
                "type": "bool"
            }
        ],
        "depends_on": [
            {
                "name": "get_low_battery_mode_status",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if low battery mode is off before optimizing performance."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the battery status before optimizing performance."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To increase screen brightness for better visibility."
            },
            {
                "name": "get_volume_level",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To adjust volume to optimal levels."
            },
            {
                "name": "get_location_service_status",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location_services_status_on",
                "reason": "To give the location services status to optimize perfromance."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "play_spotify_song",
        "description": "Plays spotify music from a given name of song at the specified volume level.",
        "parameters": [
            {
                "name": "name_of_song",
                "type": "string",
                "description": "The name of the song to play.",
                "required": true
            },
            {
                "name": "volume_level",
                "type": "int",
                "description": "Volume level between 0 (mute) and 100 (maximum).",
                "default": 50,
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_low_battery_mode_status",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To avoid high volume if the battery is low. Not necessary but a nice to have."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine if Wi-Fi is enabled."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine if the cellular service is enabled."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "play_apple_music_song",
        "description": "Plays apple music song from a given name of song at the specified volume level.",
        "parameters": [
            {
                "name": "name_of_song",
                "type": "string",
                "description": "The name of the song to play.",
                "required": true
            },
            {
                "name": "volume_level",
                "type": "int",
                "description": "Volume level between 0 (mute) and 100 (maximum).",
                "default": 50,
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_low_battery_mode_status",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To avoid high volume if the battery is low. Not necessary but a nice to have."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine if Wi-Fi is enabled."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine if the cellular service is enabled."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "install_application_by_name",
        "description": "Downloads and installs an application in the system.",
        "parameters": [
            {
                "name": "app_name",
                "type": "string",
                "description": "The name of the application to download and install.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the list of installed applications and avoid instaalling an application already installed."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine if Wi-Fi is enabled."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine if the cellular service is enabled."
            },
            {
                "name": "get_current_storage_space",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if there is enough storage space to install the application."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "update_application_by_name",
        "description": "Updates an installed application by its name to the latest version.",
        "parameters": [
            {
                "name": "app_name",
                "type": "string",
                "description": "The name of the application to update.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if the application is already installed and determine if an update is necessary."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available for downloading the application update."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure cellular service is available if Wi-Fi is not enabled."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "schedule_system_restart",
        "description": "Schedules a system restart at a specified time.",
        "parameters": [
            {
                "name": "time",
                "type": "string",
                "description": "The time to restart the system (format: HH:MM:SS).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "time",
                "reason": "To calculate the relative time until the scheduled restart."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "log_user_activity",
        "description": "Logs a user's activity with a timestamp in ISO 8601 format, `%Y-%m-%d %H:%M:%S` with an example `2022-04-17 11:25:12.345.",
        "parameters": [
            {
                "name": "activity_description",
                "type": "string",
                "description": "A description of the user's activity.",
                "required": true
            },
            {
                "name": "timestamp",
                "description": "The timestamp in ISO 8601 format, `%Y-%m-%d %H:%M:%S` with an example `2022-04-17 11:25:12.345",
                "type": "string",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To timestamp the activity log with the current date in ISO 8601 format, `%Y-%m-%d %H:%M:%S` with an example `2022-04-17 11:25:12.345"
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To timestamp the activity log with the current time."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearby_hotels",
        "description": "Finds hotels near a specified or current location, optionally filtered by star rating.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "star_rating",
                "type": "int",
                "description": "The minimum star rating of the hotels to include (1 to 5).",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if a relative location is provided."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "log_fitness_steps",
        "description": "Logs fitness progress based on total step count and date.",
        "parameters": [
            {
                "name": "total_daily_steps",
                "type": "int",
                "description": "The number of steps taken for a day.",
                "required": true
            },
            {
                "name": "date",
                "type": "string",
                "description": "The date of the step count (format: YYYY-MM-DD).",
                "required": true
            },
            {
                "name": "weight",
                "type": "int",
                "description": "The user's weight in pounds.",
                "required": false
            },
            {
                "name": "height",
                "type": "int",
                "description": "The user's height in inches.",
                "required": false
            },
            {
                "name": "age",
                "type": "int",
                "description": "The user's age in years.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To associate the step count with the current date."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the user-specific info such as age, weight, etc -- if none is given."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "locate_nearby_events",
        "description": "Finds events happening near a specified or current location on a given date.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "date",
                "type": "string",
                "description": "The date to search for events (format: YYYY-MM-DD).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To use today's date if none is specified."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the event list if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "check_available_wifi_networks",
        "description": "Lists available Wi-Fi networks near the device's current location (not sending actual current location, but setting location services to on which enables the search).",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is enabled before scanning for networks."
            },
            {
                "name": "set_location_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To enable location services for scanning nearby Wi-Fi networks."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the Wi-Fi network list if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_nearby_coffee_shops",
        "description": "Finds coffee shops near a location.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "has_food",
                "type": "bool",
                "description": "Whether the coffee shop serves food or not. Tries to do some filtering.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided or a relative location."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the coffee shop list if low."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To check if the place is open or closed during a potential public holiday."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "add_google_calendar_reminder",
        "description": "Schedules a new reminder as a task in Google calendar at a specified time.",
        "parameters": [
            {
                "name": "time",
                "type": "string",
                "description": "The time to schedule the reminder (format: HH:MM:SS).",
                "required": true
            },
            {
                "name": "date",
                "type": "string",
                "description": "The date to schedule the reminder (format: YYYY-MM-DD)",
                "required": true
            },
            {
                "name": "reminder_name",
                "type": "string",
                "description": "The name of the reminder task.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "time",
                "reason": "To calculate the time remaining until the meeting."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To use today's date if none is specified."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Wi-Fi or ceullar is needed to access Google Calendar API."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Wi-Fi or ceullar is needed to access Google Calendar API."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "add_microsoft_calendar_reminder",
        "description": "Schedules a new reminder as a task in Microsoft calendar at a specified time.",
        "parameters": [
            {
                "name": "time",
                "type": "string",
                "description": "The time to schedule the reminder (format: HH:MM:SS).",
                "required": true
            },
            {
                "name": "date",
                "type": "string",
                "description": "The date to schedule the reminder (format: YYYY-MM-DD)",
                "required": true
            },
            {
                "name": "reminder_name",
                "type": "string",
                "description": "The name of the reminder task.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "time",
                "reason": "To calculate the time remaining until the meeting."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To use today's date if none is specified."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Wi-Fi or ceullar is needed to access Google calendar API."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Wi-Fi or ceullar is needed to access Microsoft calendar API."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "add_apple_calendar_reminder",
        "description": "Schedules a new reminder as a task in Apple calendar at a specified time.",
        "parameters": [
            {
                "name": "time",
                "type": "string",
                "description": "The time to schedule the reminder (format: HH:MM:SS).",
                "required": true
            },
            {
                "name": "reminder_name",
                "type": "string",
                "description": "The name of the reminder task.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "time",
                "reason": "To calculate the time remaining until the meeting."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Wi-Fi or ceullar is needed to access Google calendar API."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Wi-Fi or ceullar is needed to access Apple calendar API."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_parking_near_location",
        "description": "Searches for parking spaces near a specified or current location.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "is_free_parking",
                "type": "bool",
                "description": "Whether to search for free parking spaces only.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To check if the specified date is a public holiday. Since parking availability might be different on holidays."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the parking options if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_gas_stations_nearby",
        "description": "Locates gas stations near a specified or current location.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_location_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure location services are enabled for retrieving the current location."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_public_transport_nearby",
        "description": "Identifies nearby public transportation options (e.g., bus stops, train stations) based on the user's location.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_location_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure location services are enabled for retrieving the current location."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the public transport options if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "delta_user_login",
        "description": "Logs the user into their Delta account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Delta account login."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Delta session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Delta session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "delta_select_entertainment",
        "description": "Allows Delta users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Delta.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "delta_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Delta user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Delta session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Delta session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "delta_view_flight_status",
        "description": "Provides Delta users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Delta.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The Delta flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "delta_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Delta user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Delta session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Delta session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "delta_update_travel_preferences",
        "description": "Allows Delta users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Delta.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "delta_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Delta user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Delta session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Delta session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "delta_manage_notifications",
        "description": "Allows Delta users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Delta.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "delta_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Delta user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid for Delta email notifications."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Delta session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Delta session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the Delta app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "united_user_login",
        "description": "Logs the user into their United Airlines account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before United Airlines account login."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the United Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the United Airlines session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "united_select_entertainment",
        "description": "Allows United Airlines users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into United Airlines.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "united_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the United Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the United Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the United Airlines session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "united_view_flight_status",
        "description": "Provides United Airlines users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into United Airlines.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The United Airlines flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "united_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the United Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the United Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the United Airlines session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "united_update_travel_preferences",
        "description": "Allows United Airlines users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into United Airlines.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "united_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the United Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the United Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the United Airlines session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "united_manage_notifications",
        "description": "Allows United Airlines users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into United Airlines.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "united_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the United Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid for United Airlines email notifications."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the United Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the United Airlines session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the United Airlines app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "jetblue_user_login",
        "description": "Logs the user into their JetBlue account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before JetBlue account login."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the JetBlue session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the JetBlue session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "jetblue_select_entertainment",
        "description": "Allows JetBlue users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into JetBlue.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "jetblue_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the JetBlue user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the JetBlue session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the JetBlue session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "jetblue_view_flight_status",
        "description": "Provides JetBlue users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into JetBlue.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The JetBlue flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "jetblue_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the JetBlue user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the JetBlue session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the JetBlue session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "jetblue_update_travel_preferences",
        "description": "Allows JetBlue users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into JetBlue.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "jetblue_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the JetBlue user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the JetBlue session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the JetBlue session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "jetblue_manage_notifications",
        "description": "Allows JetBlue users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into JetBlue.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "jetblue_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the JetBlue user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid for JetBlue email notifications."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the JetBlue session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the JetBlue session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the JetBlue app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "american_user_login",
        "description": "Logs the user into their American Airlines account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before American Airlines account login."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the American Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the American Airlines session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "american_select_entertainment",
        "description": "Allows American Airlines users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into American Airlines.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "american_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the American Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the American Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the American Airlines session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "american_view_flight_status",
        "description": "Provides American Airlines users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into American Airlines.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The American Airlines flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "american_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the American Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the American Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the American Airlines session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "american_update_travel_preferences",
        "description": "Allows American Airlines users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into American Airlines.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "american_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the American Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the American Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the American Airlines session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "american_manage_notifications",
        "description": "Allows American Airlines users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into American Airlines.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "american_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the American Airlines user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid for American Airlines email notifications."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the American Airlines session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the American Airlines session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the American Airlines app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "southwest_user_login",
        "description": "Logs the user into their Southwest account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Southwest account login."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Southwest session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Southwest session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "southwest_select_entertainment",
        "description": "Allows Southwest users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Southwest.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "southwest_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Southwest user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Southwest session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Southwest session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "southwest_view_flight_status",
        "description": "Provides Southwest users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Southwest.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The Southwest flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "southwest_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Southwest user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Southwest session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Southwest session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "southwest_update_travel_preferences",
        "description": "Allows Southwest users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Southwest.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "southwest_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Southwest user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Southwest session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Southwest session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "southwest_manage_notifications",
        "description": "Allows Southwest users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Southwest.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "southwest_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Southwest user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid for Southwest email notifications."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Southwest session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Southwest session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the Southwest app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "log_active_timers",
        "description": "Logs all active timers and their remaining durations.",
        "parameters": [
            {
                "name": "timers",
                "type": "list",
                "description": "A list of active timers and their remaining durations.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_clock_timers",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve a list of active timers and their durations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "connect_bluetooth_device",
        "description": "Connects a device to Bluetooth from a specified device ID.",
        "parameters": [
            {
                "name": "device_id",
                "type": "string",
                "description": "The Bluetooth name or ID of the device to connect to.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_bluetooth_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that Bluetooth is active and available for connecting to a device."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "connect_mobile_hotspot",
        "description": "Connects to a mobile hotspot.",
        "parameters": [
            {
                "name": "hotspot_name",
                "type": "string",
                "description": "The name of the mobile hotspot to connect to.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the mobile hotspot.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To enable Wi-Fi for broadcasting the hotspot network."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "enable_mobile_hotspot",
        "description": "Enables the mobile device's mobile hotspot functionality.",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To enable cellular data for broadcasting the hotspot network."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To advise that the battery level is sufficient for enabling the hotspot."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "add_trusted_wifi_network",
        "description": "Adds a trusted Wi-Fi network to the device's settings.",
        "parameters": [
            {
                "name": "network_name",
                "type": "string",
                "description": "The name of the Wi-Fi network to add to trusted networks.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the Wi-Fi network.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that Wi-Fi is active before adding the network."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "log_device_uptime",
        "description": "Logs the system's uptime and resets the log after reaching a specified duration.",
        "parameters": [
            {
                "name": "reset_after_seconds",
                "type": "int",
                "description": "The duration in seconds after which the uptime log will reset.",
                "required": false,
                "default": 86400
            },
            {
                "name": "system_uptime_data",
                "type": "dict",
                "description": "The system uptime data to log, in dictionary format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_system_uptime",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "system_uptime_data",
                "reason": "To retrieve the current system uptime for logging."
            },
            {
                "name": "set_clock_timer",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "reset_after_seconds",
                "reason": "To optionally set a timer until the next system restart."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_battery_level",
        "description": "Monitors and logs the device's battery level, triggering alerts at specified thresholds.",
        "parameters": [
            {
                "name": "low_threshold",
                "type": "int",
                "description": "The battery percentage threshold for low battery alerts (0-100).",
                "required": false,
                "default": 20
            },
            {
                "name": "critical_threshold",
                "type": "int",
                "description": "The battery percentage threshold for critical battery alerts (0-100).",
                "required": false,
                "default": 10
            },
            {
                "name": "current_battery_level",
                "type": "int",
                "description": "The current battery level to track and log.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the current battery level for monitoring."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_network_ip_changes",
        "description": "Monitors and logs changes to the device's network IP address.",
        "parameters": [
            {
                "name": "ip_address",
                "type": "string",
                "description": "The network IP address to track and log.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_network_ip_address",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the current network IP address for monitoring."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "start_fitness_tracker_mode",
        "description": "Starts fitness tracking for wearables. Enables the mode for tracking steps, heart rate, and other fitness metrics.",
        "parameters": [
            {
                "name": "session_duration",
                "type": "int",
                "description": "The duration of the fitness session in seconds. If not specified, the session will run indefinitely.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_bluetooth_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To enable Bluetooth for connecting to fitness devices."
            },
            {
                "name": "set_clock_timer",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "session_duration",
                "reason": "May want to track the duration of the fitness session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "resy_reserve_restaurant_table",
        "description": "Resy reserves a restaurant table at a specified restaurant.",
        "parameters": [
            {
                "name": "restaurant_name",
                "type": "string",
                "description": "The name of the restaurant to reserve a table at.",
                "required": true
            },
            {
                "name": "time",
                "type": "string",
                "description": "The reservation time (format: HH:MM:SS).",
                "required": true
            },
            {
                "name": "outdoor_seating",
                "type": "bool",
                "description": "Whether to reserve outdoor seating, if available.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check weather conditions and determine if outdoor seating is appropriate."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if the restaurant might be closed due to a national holiday."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "resy_search_restaurants",
        "description": "Searches for available restaurants only available on Resy based on the current location, date, time, and number of people.",
        "parameters": [
            {
                "name": "date",
                "type": "string",
                "description": "The reservation date in the format YYYY-MM-DD.",
                "required": true
            },
            {
                "name": "time",
                "type": "string",
                "description": "The reservation time in the format HH:MM:SS.",
                "required": true
            },
            {
                "name": "number_of_people",
                "type": "int",
                "description": "The number of people for the reservation.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "current_location",
                "reason": "To find restaurants near the user's current location."
            },
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the search aligns with the current time."
            },
            {
                "name": "resy_reserve_restaurant_table",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Can be used to reserve a table at the found selected restaurant."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "opentable_reserve_restaurant_table",
        "description": "OpenTable reserves a restaurant table at a specified restaurant.",
        "parameters": [
            {
                "name": "restaurant_name",
                "type": "string",
                "description": "The name of the restaurant to reserve a table at.",
                "required": true
            },
            {
                "name": "time",
                "type": "string",
                "description": "The reservation time (format: HH:MM:SS).",
                "required": true
            },
            {
                "name": "outdoor_seating",
                "type": "bool",
                "description": "Whether to reserve outdoor seating, if available.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check weather conditions and determine if outdoor seating is appropriate."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if the restaurant might be closed due to a national holiday."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "opentable_search_restaurants",
        "description": "Searches for available restaurants only available on OpenTable based on the current location, date, time, and number of people.",
        "parameters": [
            {
                "name": "date",
                "type": "string",
                "description": "The reservation date in the format YYYY-MM-DD.",
                "required": true
            },
            {
                "name": "time",
                "type": "string",
                "description": "The reservation time in the format HH:MM:SS.",
                "required": true
            },
            {
                "name": "number_of_people",
                "type": "int",
                "description": "The number of people for the reservation.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "current_location",
                "reason": "To find restaurants near the user's current location."
            },
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the search aligns with the current time."
            },
            {
                "name": "opentable_reserve_restaurant_table",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Can be used to reserve a table at the found selected restaurant."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearby_movie_theaters",
        "description": "Searches for movie theaters near a specified or current location, considering weather for potential delays and holiday schedules.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "movie_genre",
                "type": "string",
                "description": "Optional filter by movie genre.",
                "enum": [
                    "action",
                    "comedy",
                    "drama",
                    "horror",
                    "sci-fi",
                    "romance"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide weather insights for delays in reaching the theater."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if the theater may have adjusted schedules on holidays."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_pet_friendly_hotels",
        "description": "Searches for pet-friendly hotels near a specified or current location, considering holidays and weather for travel plans.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "pet_type",
                "type": "string",
                "description": "Type of pet to check hotel policies for.",
                "enum": [
                    "dog",
                    "cat",
                    "bird",
                    "reptile"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide guidance on travel conditions for pets."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if holiday closures may affect hotel availability."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "locate_pet_parks",
        "description": "Finds pet-friendly parks near a specified or current location, considering weather and holidays for outdoor activities.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location to search around (e.g., coordinates or address).",
                "required": true
            },
            {
                "name": "pet_type",
                "type": "string",
                "description": "The type of pet to find appropriate parks for.",
                "enum": [
                    "dog",
                    "cat",
                    "other"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if the weather is suitable for outdoor activities with pets."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To consider if parks have limited access or are closed on holidays."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "schedule_grocery_delivery",
        "description": "Schedules a grocery delivery at the user's address, considering weather and holidays for potential delays.",
        "parameters": [
            {
                "name": "delivery_time",
                "type": "string",
                "description": "The time for the grocery delivery (format: HH:MM:SS).",
                "required": true
            },
            {
                "name": "preferred_store",
                "type": "string",
                "description": "The preferred store for the grocery order.",
                "required": false
            },
            {
                "name": "items",
                "type": "list",
                "description": "The list of grocery items to be delivered.",
                "required": true
            },
            {
                "name": "delivery_address",
                "type": "string",
                "description": "The delivery address for the grocery order.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_address",
                "reason": "To use the user's current location if none is provided."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_time",
                "reason": "To ensure the delivery time aligns with the current time."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check for adverse weather conditions that could delay delivery."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if the delivery service or store is closed on a holiday."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "play_youtube_video",
        "description": "Plays a YouTube video by its name and sets the device volume appropriately.",
        "parameters": [
            {
                "name": "video_name",
                "type": "string",
                "description": "The name of the YouTube video to play.",
                "required": true
            },
            {
                "name": "volume_level",
                "type": "int",
                "description": "The desired volume level (0 to 100).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_volume_level",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "volume_level",
                "reason": "To adjust the system's volume for optimal playback experience."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is enabled for streaming the YouTube video."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that cellular data is available as a fallback if Wi-Fi is unavailable."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the video if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "play_windows_video",
        "description": "Plays a video file locally using the Windows Movies & TV application.",
        "parameters": [
            {
                "name": "filename",
                "type": "string",
                "description": "The name of the video file to play.",
                "required": true
            },
            {
                "name": "volume_level",
                "type": "int",
                "description": "The desired volume level (0 to 100).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_volume_level",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "volume_level",
                "reason": "To adjust the system's volume for video playback."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the video if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "play_netflix_video",
        "description": "Plays a Netflix video by its ID, ensuring the device has connectivity and volume is set appropriately.",
        "parameters": [
            {
                "name": "video_id",
                "type": "string",
                "description": "The Netflix video ID to play.",
                "required": true
            },
            {
                "name": "volume_level",
                "type": "int",
                "description": "The desired volume level (0 to 100).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_volume_level",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "volume_level",
                "reason": "To adjust the system's volume for optimal playback experience."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is enabled for streaming Netflix content if needed."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that cellular data is available as a fallback if Wi-Fi is unavailable."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the video if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "play_amazon_prime_video",
        "description": "Plays an Amazon Prime Video by its title and ensures the volume is set correctly.",
        "parameters": [
            {
                "name": "video_title",
                "type": "string",
                "description": "The title of the Amazon Prime Video to play.",
                "required": true
            },
            {
                "name": "volume_level",
                "type": "int",
                "description": "The desired volume level (0 to 100).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_volume_level",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "volume_level",
                "reason": "To adjust the system's volume for optimal playback experience."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is enabled for streaming Amazon Prime Video content if needed."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that cellular data is available as a fallback if Wi-Fi is unavailable."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the video if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "openai_multilingual_chatbot_completions_api",
        "description": "OpenAI multilingual chatbot completions API. Takes in the user request and returns the chatbot result in the specified language.",
        "parameters": [
            {
                "name": "model_name",
                "type": "string",
                "description": "The name of the OpenAI model.",
                "default": "gpt4o-mini",
                "enum": [
                    "gpt-4o",
                    "gpt-35",
                    "gpt-4o-mini",
                    "gpt-o1",
                    "gpt-o1-mini"
                ],
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the response should be returned.",
                "required": false
            },
            {
                "name": "user_profile",
                "type": "dict",
                "description": "An optional dictionary of known facts about the user and their preferences to help aid the chatbot experience.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To initialize the chatbot in the user's preferred language."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "user_profile",
                "reason": "To optionally feed the chat completions endpoint the user's profile to help personalize chat completions responses."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "meta_llama_multilingual_chatbot_api",
        "description": "Meta LLaMA multilingual chatbot API. Processes the user request and returns the chatbot output in the specified language.",
        "parameters": [
            {
                "name": "model_name",
                "type": "string",
                "description": "The name of the LLaMA model.",
                "default": "llama-7b",
                "enum": [
                    "llama-7b-v0",
                    "llama-8b-v1",
                    "llama-70b-v1"
                ],
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the chatbot response should be returned.",
                "required": false
            },
            {
                "name": "user_profile",
                "type": "dict",
                "description": "An optional dictionary of known facts about the user and their preferences to personalize chatbot responses.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To return the chatbot output in the user's preferred language."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "user_profile",
                "reason": "To help the chatbot personalize responses using the user's profile."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "anthropic_claude_multilingual_chatbot_api",
        "description": "Anthropic Claude multilingual chatbot API. Takes the user request and provides the chatbot response in the specified language.",
        "parameters": [
            {
                "name": "model_name",
                "type": "string",
                "description": "The name of the Claude model.",
                "default": "claude-instant",
                "enum": [
                    "claude-3-5-sonnet",
                    "claude-3-opus",
                    "claude3-haiku"
                ],
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the chatbot response should be returned.",
                "required": false
            },
            {
                "name": "user_profile",
                "type": "dict",
                "description": "An optional dictionary of known facts about the user and their preferences to enhance chatbot responses.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To provide chatbot output in the user's preferred language."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "user_profile",
                "reason": "To use user-specific information to personalize chatbot outputs."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "mistral_multilingual_chatbot_api",
        "description": "Mistral multilingual chatbot API. Processes the user request and provides chatbot responses in the specified language.",
        "parameters": [
            {
                "name": "model_name",
                "type": "string",
                "description": "The name of the Mistral model.",
                "default": "mistral-large",
                "enum": [
                    "mistral-large",
                    "mistral-7b-instruct-v0",
                    "mixtral-8x7b-instruct",
                    "mistral-small"
                ],
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the chatbot response should be returned.",
                "required": false
            },
            {
                "name": "user_profile",
                "type": "dict",
                "description": "An optional dictionary of known facts about the user and their preferences to personalize chatbot responses.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To provide chatbot output in the user's preferred language."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "user_profile",
                "reason": "To personalize chatbot responses using user-specific information."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "google_vertex_multilingual_chatbot_api",
        "description": "Google Vertex AI multilingual chatbot API. Processes the user input and generates chatbot responses in the specified language.",
        "parameters": [
            {
                "name": "model_name",
                "type": "string",
                "description": "The name of the Google Vertex model.",
                "default": "vertex-gemini-15-flash",
                "enum": [
                    "vertex-gemini-15-flash",
                    "gemini-15-pro"
                ],
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the chatbot response should be generated.",
                "required": false
            },
            {
                "name": "user_profile",
                "type": "dict",
                "description": "An optional dictionary of known facts about the user and their preferences to enhance chatbot responses.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To provide chatbot output in the user's preferred language."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "user_profile",
                "reason": "To personalize chatbot responses using user-specific preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "audible_account_login",
        "description": "Logs the user into their Audible account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Audible account login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Audible session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "download_audible_book",
        "description": "Downloads an audiobook from Audible in the specified language.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Audible.",
                "required": true
            },
            {
                "name": "book_name",
                "type": "string",
                "description": "The name of the audiobook to download.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the audiobook is to be downloaded.",
                "enum": [
                    "english",
                    "spanish",
                    "french",
                    "german",
                    "italian"
                ],
                "default": "english",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "audible_account_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To authenticate the user before accessing Audible content."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check for WiFi connectivity for downloading the audiobook."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure sufficient battery is available for downloading the audiobook."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "read_audible_book",
        "description": "Plays an audiobook from Audible in the specified language.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Audible.",
                "required": true
            },
            {
                "name": "book_name",
                "type": "string",
                "description": "The name of the audiobook to play.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the audiobook is to be played.",
                "enum": [
                    "english",
                    "spanish",
                    "french",
                    "german",
                    "italian"
                ],
                "default": "english",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "audible_account_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To authenticate the user before accessing Audible content."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure sufficient battery is available for playing the audiobook."
            },
            {
                "name": "get_volume_level",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To set the volume level for the audiobook playback."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "libby_account_login",
        "description": "Logs the user into their Libby account using their library card and PIN.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user (optional if library card is provided).",
                "required": false
            },
            {
                "name": "library_card_number",
                "type": "string",
                "description": "The library card number associated with the Libby account.",
                "required": true
            },
            {
                "name": "pin",
                "type": "string",
                "description": "The PIN or password for the library card.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid if used for Libby login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Libby session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "download_libby_book",
        "description": "Downloads an audiobook from Libby in the specified language.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Libby.",
                "required": true
            },
            {
                "name": "book_name",
                "type": "string",
                "description": "The name of the audiobook to download.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the audiobook is to be downloaded.",
                "enum": [
                    "english",
                    "spanish",
                    "french",
                    "german",
                    "italian"
                ],
                "default": "english",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "libby_account_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To authenticate the user before accessing Libby content."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check for WiFi connectivity for downloading the audiobook."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check for cellular service availability if WiFi is not available."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure sufficient battery is available for downloading the audiobook."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "read_libby_book",
        "description": "Plays an audiobook from Libby in the specified language.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Libby.",
                "required": true
            },
            {
                "name": "book_name",
                "type": "string",
                "description": "The name of the audiobook to play.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The language in which the audiobook is to be played.",
                "enum": [
                    "english",
                    "spanish",
                    "french",
                    "german",
                    "italian"
                ],
                "default": "english",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "libby_account_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To authenticate the user before accessing Libby content."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure sufficient battery is available for playing the audiobook."
            },
            {
                "name": "get_volume_level",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To set the volume level for the audiobook playback."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_geo_location_by_ip",
        "description": "Retrieves the geographic location of a device based on an IP address.",
        "parameters": [
            {
                "name": "ip_address",
                "type": "string",
                "description": "The IP address to be used for geo-location lookup. For example: '192.168.1.10'",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_network_ip_address",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the current network IP address for geo-location lookup."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "check_ip_reputation",
        "description": "Checks the reputation of an IP address for potential malicious activity or being part of a botnet.",
        "parameters": [
            {
                "name": "ip_address",
                "type": "string",
                "description": "The IP address to check for reputation.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_network_ip_address",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the network IP address for checking reputation if needed."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "analyze_network_activity_by_ip_and_uptime",
        "description": "Analyzes network activity based on a device\u2019s IP address and system uptime to determine patterns or anomalies.",
        "parameters": [
            {
                "name": "ip_address",
                "type": "string",
                "description": "The IP address of the device to analyze network activity.",
                "required": true
            },
            {
                "name": "system_uptime",
                "type": "integer",
                "description": "The duration the system has been running since the last reboot, in seconds.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_network_ip_address",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the network IP address for analyzing network activity."
            },
            {
                "name": "get_system_uptime",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "system_uptime",
                "reason": "To retrieve the system uptime and correlate it with network activity patterns if needed."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "optimize_system_resources_by_uptime",
        "description": "Optimizes system resources (CPU, memory, disk) based on the system uptime to prevent performance degradation after extended periods of running.",
        "parameters": [
            {
                "name": "system_uptime",
                "type": "integer",
                "description": "The duration the system has been running since the last reboot, in seconds.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_system_uptime",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "system_uptime",
                "reason": "To determine how long the system has been running and optimize resources accordingly."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "recommend_scheduled_reboot",
        "description": "Recommends a scheduled reboot if the system has been running for a prolonged period without restart.",
        "parameters": [
            {
                "name": "system_uptime",
                "type": "integer",
                "description": "The duration the system has been running since the last reboot, in seconds.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_system_uptime",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "system_uptime",
                "reason": "To determine if the system has been running too long without a reboot and recommend action."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the battery status before optimizing performance."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "mute_notifications_for_apps",
        "description": "Mutes notifications for a specific set of apps.",
        "parameters": [
            {
                "name": "app_list",
                "type": "array",
                "description": "A list of app names to mute notifications for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the application is installed before trying to mute notifications."
            },
            {
                "name": "get_do_not_disturb_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if Do Not Disturb mode is enabled before muting notifications."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "log_dnd_mode_activations",
        "description": "Logs the times when 'Do Not Disturb' mode is activated or deactivated.",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_do_not_disturb_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To track when Do Not Disturb mode is activated or deactivated."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "sync_user_settings",
        "description": "Synchronizes given user settings across multiple devices.",
        "parameters": [
            {
                "name": "device_id",
                "type": "string",
                "description": "The ID of the device to sync settings with.",
                "required": true
            },
            {
                "name": "settings",
                "type": "dict",
                "description": "The user settings to be synchronized, in a dictionary format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "settings",
                "reason": "To fetch the current user settings for synchronization."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "reset_user_settings_to_default",
        "description": "Resets all user settings and preferences to the default values.",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To compare the current settings with the default ones during and after the reset."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_secure_api_key",
        "description": "Generates a secure API key for user authentication in developer tools.",
        "parameters": [
            {
                "name": "hashed_email",
                "type": "string",
                "description": "The hashed version of the user's email address, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "unique_identifier",
                "type": "string",
                "description": "The unique identifier generated by the generate_unique_ID dependency.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_email",
                "reason": "To hash the user's email address, which is used as part of the API key."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "unique_identifier",
                "reason": "To generate a unique portion of the API key."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_event_qr_code",
        "description": "Generates a unique QR code for event entry using a unique identifier.",
        "parameters": [
            {
                "name": "hashed_email",
                "type": "string",
                "description": "The hashed version of the user's email, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "unique_identifier",
                "type": "string",
                "description": "The unique identifier generated by the generate_unique_ID dependency.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_email",
                "reason": "To hash the user's email to uniquely associate the QR code with the user."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "unique_identifier",
                "reason": "To create a unique ID for the QR code associated with the event."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "create_apple_music_playlist_id",
        "description": "Generates a unique ID for a new playlist in Apple Music.",
        "parameters": [
            {
                "name": "playlist_name",
                "type": "string",
                "description": "The name of the Apple Music playlist for which a unique ID will be generated.",
                "required": true
            },
            {
                "name": "unique_id",
                "type": "string",
                "description": "The unique identifier for the playlist.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "generate_unique_ID",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To append a unique identifier for the Apple Music playlist."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "create_spotify_playlist_id",
        "description": "Generates a unique ID for a new playlist in Spotify.",
        "parameters": [
            {
                "name": "playlist_name",
                "type": "string",
                "description": "The name of the Spotify playlist for which a unique ID will be generated.",
                "required": true
            },
            {
                "name": "unique_id",
                "type": "string",
                "description": "The unique identifier for the playlist.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "generate_unique_ID",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To append a unique identifier for the Spotify playlist."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "post_usernames_for_feedback",
        "description": "Hashes usernames to anonymize feedback submissions.",
        "parameters": [
            {
                "name": "hashed_username",
                "type": "string",
                "description": "The hashed version of the username, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "feedback_text",
                "type": "string",
                "description": "The feedback text submitted by the user.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_username",
                "reason": "To hash the username and anonymize the feedback submission."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_document_id_for_signature",
        "description": "Generates a unique document ID for e-signature tracking.",
        "parameters": [
            {
                "name": "hashed_document_name",
                "type": "string",
                "description": "The hashed version of the document name, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "unique_identifier",
                "type": "string",
                "description": "The unique identifier generated by the generate_unique_ID dependency.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_document_name",
                "reason": "To hash the document name to create a unique document ID."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "unique_identifier",
                "reason": "To append a unique identifier for the e-signature document ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "create_unique_cloud_file_name",
        "description": "Generates a unique file name for storing user files in the cloud.",
        "parameters": [
            {
                "name": "hashed_file_name",
                "type": "string",
                "description": "The hashed version of the original file name, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "unique_identifier",
                "type": "string",
                "description": "The unique identifier generated by the generate_unique_ID dependency.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_file_name",
                "reason": "To hash the original file name for creating a unique name."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "unique_identifier",
                "reason": "To append a unique identifier to ensure the file name is globally unique."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_minecraft_achievement_id",
        "description": "Generates a unique ID for Minecraft achievements earned by users.",
        "parameters": [
            {
                "name": "hashed_achievement_name",
                "type": "string",
                "description": "The hashed version of the Minecraft achievement name, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "unique_identifier",
                "type": "string",
                "description": "The unique identifier generated by the generate_unique_ID dependency.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_achievement_name",
                "reason": "To hash the Minecraft achievement name for generating the unique ID."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "unique_identifier",
                "reason": "To append a unique identifier for the Minecraft achievement ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_fortnite_achievement_id",
        "description": "Generates a unique ID for Fortnite achievements earned by users.",
        "parameters": [
            {
                "name": "hashed_achievement_name",
                "type": "string",
                "description": "The hashed version of the Fortnite achievement name, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "unique_identifier",
                "type": "string",
                "description": "The unique identifier generated by the generate_unique_ID dependency.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_achievement_name",
                "reason": "To hash the Fortnite achievement name for generating the unique ID."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "unique_identifier",
                "reason": "To append a unique identifier for the Fortnite achievement ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_cod_achievement_id",
        "description": "Generates a unique ID for Call of Duty achievements earned by players.",
        "parameters": [
            {
                "name": "hashed_achievement_name",
                "type": "string",
                "description": "The hashed version of the Call of Duty achievement name, generated by the hash_string dependency.",
                "required": true
            },
            {
                "name": "unique_identifier",
                "type": "string",
                "description": "The unique identifier generated by the generate_unique_ID dependency.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "hash_string",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hashed_achievement_name",
                "reason": "To hash the Call of Duty achievement name for generating the unique ID."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "unique_identifier",
                "reason": "To append a unique identifier for the Call of Duty achievement ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "scan_for_nearby_bluetooth_devices",
        "description": "Scans for nearby Bluetooth devices when Bluetooth is enabled.",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_bluetooth_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Bluetooth is enabled before scanning for nearby devices."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "share_files_via_bluetooth",
        "description": "Shares selected files with a connected Bluetooth device if Bluetooth is active.",
        "parameters": [
            {
                "name": "file_paths",
                "type": "array",
                "description": "A list of file paths to be shared via Bluetooth.",
                "required": true
            },
            {
                "name": "device_name",
                "type": "string",
                "description": "The name of the Bluetooth device to share files with.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_bluetooth_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if Bluetooth is enabled before attempting to share files."
            },
            {
                "name": "scan_for_nearby_bluetooth_devices",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "device_name",
                "reason": "To ensure the target device is in the list of nearby Bluetooth devices."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "check_bluetooth_device_battery",
        "description": "Checks the battery level of a connected Bluetooth device.",
        "parameters": [
            {
                "name": "device_name",
                "type": "string",
                "description": "The name of the Bluetooth device to check the battery level for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_bluetooth_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Bluetooth is enabled before checking the battery level."
            },
            {
                "name": "get_battery_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Optional to know if device battery level is low as additional information if the bluetooth device battery is low."
            },
            {
                "name": "list_connected_bluetooth_devices",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "device_name",
                "reason": "To ensure the target device is connected before checking its battery level."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "list_connected_bluetooth_devices",
        "description": "Lists the Bluetooth devices currently connected to the system.",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_bluetooth_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Bluetooth is enabled before listing connected devices."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_stretch_breaks",
        "description": "Logs the total time of stretch breaks during a long work session.",
        "parameters": [
            {
                "name": "timer_id",
                "type": "string",
                "description": "The unique ID of the pre-set timer for the stretch break.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_clock_timers",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "timer_id",
                "reason": "The stretch break's start and end time is pre-determined by a clock timer."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "log_workout_session",
        "description": "Logs a completed workout session, including the total time from a pre-set timer.",
        "parameters": [
            {
                "name": "workout_type",
                "type": "string",
                "description": "The type of workout performed (e.g., 'Cardio', 'Strength', 'Yoga').",
                "required": true
            },
            {
                "name": "workout_duration_s",
                "type": "integer",
                "description": "The duration of the workout in seconds, retrieved from a pre-set timer.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_clock_timers",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "workout_duration",
                "reason": "The workout duration is retrieved from a pre-set timer."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "workout_duration",
                "reason": "The workout duration is converted to seconds for logging purposes."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "cook_recipe_with_timer",
        "description": "Uses a pre-set timer to guide the user through a recipe, ensuring proper cooking durations for each step.",
        "parameters": [
            {
                "name": "recipe_name",
                "type": "string",
                "description": "The name of the recipe being cooked.",
                "required": true
            },
            {
                "name": "timer_id",
                "type": "string",
                "description": "The unique ID of the pre-set timer for the recipe step",
                "required": true
            },
            {
                "name": "current_step",
                "type": "integer",
                "description": "The current step of the recipe being executed.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_clock_timer",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "timer_id",
                "reason": "The timer must be pre-set for the recipe step to track its duration accurately."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_study_session_with_timer",
        "description": "Tracks a focused study session or scheduled break using a pre-set timer.",
        "parameters": [
            {
                "name": "subject",
                "type": "string",
                "description": "The subject being studied (e.g., 'Math').",
                "required": true
            },
            {
                "name": "timer_id",
                "type": "string",
                "description": "The pre-set timer ID for the session",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_clock_timer",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "timer_id",
                "reason": "The timer must be pre-set for the study session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_puzzle_game_timer",
        "description": "Tracks the time remaining for completing a puzzle game using a pre-set timer.",
        "parameters": [
            {
                "name": "game_name",
                "type": "string",
                "description": "The name of the puzzle game.",
                "required": true
            },
            {
                "name": "timer_id",
                "type": "string",
                "description": "The pre-set timer ID for the game",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_clock_timer",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "timer_id",
                "reason": "The timer must be pre-set for the game."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_concert_countdown",
        "description": "Tracks the countdown for a concert or live event using a pre-set timer.",
        "parameters": [
            {
                "name": "event_name",
                "type": "string",
                "description": "The name of the concert or live event.",
                "required": true
            },
            {
                "name": "timer_id",
                "type": "string",
                "description": "The pre-set timer ID for the countdown",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "set_clock_timer",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "timer_id",
                "reason": "The timer must be pre-set for the event countdown."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "schedule_doctors_appointment",
        "description": "Schedules a doctor's appointment, auto-filling user details and ensuring available time slots are accurate, while notifying the user about potential weather conditions.",
        "parameters": [
            {
                "name": "specialty",
                "type": "string",
                "description": "The medical specialty required for the appointment (e.g., 'Cardiologist', 'Dermatologist').",
                "required": true
            },
            {
                "name": "preferred_date",
                "type": "string",
                "description": "The preferred date for the appointment in YYYY-MM-DD format.",
                "required": true
            },
            {
                "name": "preferred_time",
                "type": "string",
                "description": "The preferred time for the appointment in HH:MM format.",
                "required": false
            },
            {
                "name": "location",
                "type": "string",
                "description": "The user's current or preferred location for the appointment (e.g., address, city).",
                "required": true
            },
            {
                "name": "user_details",
                "type": "dict",
                "description": "A dictionary of user details (e.g., email, phone number, medical history) auto-filled from user settings.",
                "required": true
            },
            {
                "name": "weather_forecast",
                "type": "string",
                "description": "A brief description of the weather on the preferred date, retrieved from the current weather API.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To determine the user's current or preferred location for the appointment."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "user_details",
                "reason": "To auto-fill user details like email, phone number, or medical preferences."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "preferred_time",
                "reason": "To ensure the preferred time aligns with the current time and the doctor's availability."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "weather_forecast",
                "reason": "To inform the user of potential weather conditions on the preferred date."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "launch_safari",
        "description": "Launches the Safari browser to browse the web.",
        "parameters": [
            {
                "name": "start_page",
                "type": "string",
                "description": "The URL to open upon launch (defaults to the user's homepage).",
                "required": false
            },
            {
                "name": "theme",
                "type": "string",
                "description": "The theme for the browser (e.g., 'light', 'dark')",
                "required": false,
                "default": "light",
                "enum": [
                    "light",
                    "dark"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "theme",
                "reason": "To apply the user's theme preference before launching the browser, if not specified by user."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available if the start page requires an internet connection."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check cellular service availability if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "launch_chrome",
        "description": "Launches the Chrome browser.",
        "parameters": [
            {
                "name": "start_page",
                "type": "string",
                "description": "The URL to open upon launch.",
                "required": false
            },
            {
                "name": "theme",
                "type": "string",
                "description": "The theme preference (e.g., 'dark', 'light'), retrieved from user settings.",
                "required": false,
                "default": "light",
                "enum": [
                    "light",
                    "dark"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "theme",
                "reason": "To apply the user's theme preference to the browser settings."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available if the browser needs to load an internet page."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure cellular connectivity is available if Wi-Fi is not enabled."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "launch_microsoft_word",
        "description": "Launches Microsoft Word for document editing.",
        "parameters": [
            {
                "name": "document_name",
                "type": "string",
                "description": "The name of the document to open (optional).",
                "required": false
            },
            {
                "name": "theme",
                "type": "string",
                "description": "The preferred theme (e.g., 'light', 'dark'), retrieved from user settings.",
                "required": false,
                "default": "light",
                "enum": [
                    "light",
                    "dark"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "theme",
                "reason": "To apply the user's theme preference to Microsoft Word settings."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available for accessing cloud-synced documents."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check cellular connectivity if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "launch_vscode",
        "description": "Launches Visual Studio Code for coding.",
        "parameters": [
            {
                "name": "workspace_path",
                "type": "string",
                "description": "The path to the workspace or project folder to open.",
                "required": false
            },
            {
                "name": "theme",
                "type": "string",
                "description": "The preferred editor theme (e.g., 'dark', 'light'), retrieved from user settings.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "theme",
                "reason": "To apply the user's theme preference to Visual Studio Code settings."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available for remote repositories or extensions requiring internet."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check cellular connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "search_file_system",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "workspace_path",
                "reason": "To locate the workspace folder or project path for opening in Visual Studio Code."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "send_file_in_email",
        "description": "Sends a file as an email attachment after validating the recipient's email address and ensuring the file exists at the specified path.",
        "parameters": [
            {
                "name": "recipient_email",
                "type": "string",
                "description": "The email address of the recipient.",
                "required": true
            },
            {
                "name": "file_path",
                "type": "string",
                "description": "The absolute path of the file to be attached.",
                "required": true
            },
            {
                "name": "email_subject",
                "type": "string",
                "description": "The subject of the email.",
                "required": false
            },
            {
                "name": "email_body",
                "type": "string",
                "description": "The body content of the email.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "search_file_system",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "file_path",
                "reason": "To locate the file path in the system before attaching it to the email."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipient_email",
                "reason": "To ensure the recipient's email address is valid before sending the email."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "delete_file_from_system",
        "description": "Deletes a specified file from the system after ensuring it exists.",
        "parameters": [
            {
                "name": "file_name",
                "type": "string",
                "description": "The name of the file to be deleted.",
                "required": true
            },
            {
                "name": "confirmation",
                "type": "boolean",
                "description": "A user confirmation to proceed with deleting the file.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "search_file_system",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "file_name",
                "reason": "To ensure the specified file exists before attempting deletion."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "launch_ms_teams",
        "description": "Launches the Microsoft Teams application, optionally enabling Do Not Disturb mode to minimize interruptions.",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_do_not_disturb_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To minimize interruptions during meetings or focus sessions."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available for Microsoft Teams connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure cellular data is available as a fallback if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "launch_google_meet",
        "description": "Launches the Google Meet application or webpage, optionally enabling Do Not Disturb mode for focused meetings.",
        "parameters": [],
        "depends_on": [
            {
                "name": "set_do_not_disturb_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To prevent interruptions during meetings."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available for Google Meet connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check cellular data availability as a backup connection."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "join_zoom_meeting",
        "description": "Joins a specific Zoom meeting, enabling Do Not Disturb mode and verifying internet connectivity for a seamless experience.",
        "parameters": [
            {
                "name": "meeting_id",
                "type": "string",
                "description": "The unique ID of the Zoom meeting to join.",
                "required": true
            },
            {
                "name": "passcode",
                "type": "string",
                "description": "The passcode for the Zoom meeting, if required.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "set_do_not_disturb_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is not disturbed during the Zoom meeting."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable Wi-Fi connectivity for the meeting."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure cellular data is available as a fallback option."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "login_amc",
        "description": "Logs into the AMC Theatres app using the user's email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address associated with the AMC account.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the AMC account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the AMC app (e.g., 'English', 'Spanish').",
                "required": false,
                "default": "English",
                "enum": [
                    "English",
                    "Spanish",
                    "French",
                    "German",
                    "Italian",
                    "Portuguese"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email is valid before logging into the AMC app."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm that the AMC app is installed on the device."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To ensure the app language matches the system language for a seamless experience."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_amc_tickets",
        "description": "Purchases tickets for a movie at AMC Theatres after logging in.",
        "parameters": [
            {
                "name": "movie_title",
                "type": "string",
                "description": "The title of the movie to buy tickets for.",
                "required": true
            },
            {
                "name": "showtime",
                "type": "string",
                "description": "The desired showtime in HH:MM format.",
                "required": true
            },
            {
                "name": "number_of_tickets",
                "type": "integer",
                "description": "The number of tickets to purchase.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_amc",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before purchasing tickets."
            },
            {
                "name": "get_current_date",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the selected showtime is valid for today's date."
            },
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that the selected showtime is in the future."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To notify the user of weather conditions at the time of the show."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm the AMC app is installed before purchasing tickets."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "number_of_tickets",
                "reason": "To optionally feed details about previous ticket purchases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_amc_tickets",
        "description": "Retrieves and displays the user's purchased tickets from AMC Theatres.",
        "parameters": [
            {
                "name": "account_id",
                "type": "string",
                "description": "The AMC account ID to retrieve tickets for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_amc",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before retrieving tickets."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm that the AMC app is installed before retrieving tickets."
            },
            {
                "name": "set_do_not_disturb_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To minimize interruptions while accessing tickets."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "login_regal",
        "description": "Logs into the Regal Cinemas app using the user's email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address associated with the Regal account.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the Regal account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the Regal app (e.g., 'English', 'Spanish').",
                "required": false,
                "default": "English",
                "enum": [
                    "English",
                    "Spanish",
                    "French",
                    "German",
                    "Italian",
                    "Portuguese"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email is valid before logging into the Regal app."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm that the Regal app is installed on the device."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To ensure the app language matches the system language for a seamless experience."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_regal_tickets",
        "description": "Purchases tickets for a movie at Regal Cinemas after logging in.",
        "parameters": [
            {
                "name": "movie_title",
                "type": "string",
                "description": "The title of the movie to buy tickets for.",
                "required": true
            },
            {
                "name": "showtime",
                "type": "string",
                "description": "The desired showtime in HH:MM format.",
                "required": true
            },
            {
                "name": "number_of_tickets",
                "type": "integer",
                "description": "The number of tickets to purchase.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_regal",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before purchasing tickets."
            },
            {
                "name": "get_current_date",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the selected showtime is valid for today's date."
            },
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that the selected showtime is in the future."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To notify the user of weather conditions at the time of the show."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm the Regal app is installed before purchasing tickets."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "number_of_tickets",
                "reason": "To optionally feed details about previous ticket purchases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_regal_tickets",
        "description": "Retrieves and displays the user's purchased tickets from Regal Cinemas.",
        "parameters": [
            {
                "name": "account_id",
                "type": "string",
                "description": "The Regal account ID to retrieve tickets for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_regal",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before retrieving tickets."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm that the Regal app is installed before retrieving tickets."
            },
            {
                "name": "set_do_not_disturb_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To minimize interruptions while accessing tickets."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "login_cinemark",
        "description": "Logs into the Cinemark app using the user's email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address associated with the Cinemark account.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the Cinemark account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the Cinemark app (e.g., 'English', 'Spanish').",
                "required": false,
                "default": "English",
                "enum": [
                    "English",
                    "Spanish",
                    "French",
                    "German",
                    "Italian",
                    "Portuguese"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email is valid before logging into the Cinemark app."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm that the Cinemark app is installed on the device."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To ensure the app language matches the system language for a seamless experience."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the tickets if low."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_cinemark_tickets",
        "description": "Purchases tickets for a movie at Cinemark after logging in.",
        "parameters": [
            {
                "name": "movie_title",
                "type": "string",
                "description": "The title of the movie to buy tickets for.",
                "required": true
            },
            {
                "name": "showtime",
                "type": "string",
                "description": "The desired showtime in HH:MM format.",
                "required": true
            },
            {
                "name": "number_of_tickets",
                "type": "integer",
                "description": "The number of tickets to purchase.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_cinemark",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before purchasing tickets."
            },
            {
                "name": "get_current_date",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the selected showtime is valid for today's date."
            },
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that the selected showtime is in the future."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To notify the user of weather conditions at the time of the show."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm the Cinemark app is installed before purchasing tickets."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "number_of_tickets",
                "reason": "To optionally feed details about previous ticket purchases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_cinemark_tickets",
        "description": "Retrieves and displays the user's purchased tickets from Cinemark.",
        "parameters": [
            {
                "name": "account_id",
                "type": "string",
                "description": "The Cinemark account ID to retrieve tickets for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_cinemark",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before retrieving tickets."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm that the Cinemark app is installed before retrieving tickets."
            },
            {
                "name": "set_do_not_disturb_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To minimize interruptions while accessing tickets."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "login_to_steam",
        "description": "Authenticates a user on Steam, ensuring internet availability.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address associated with the Steam account.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the Steam account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the Steam app (e.g., 'English', 'Spanish').",
                "required": false,
                "default": "English",
                "enum": [
                    "English",
                    "Spanish",
                    "French",
                    "German",
                    "Italian",
                    "Portuguese"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email address provided is valid before authentication."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure internet connectivity for logging into Steam."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To ensure the app language matches the system language for a seamless experience."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needs cellular connection if Wi-Fi is not available."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness for the game."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "launch_steam_game",
        "description": "Launches a specific game on Steam, applying user graphics preferences.",
        "parameters": [
            {
                "name": "game_name",
                "type": "string",
                "description": "The name of the game to launch.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_steam",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before launching a game."
            },
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To apply user graphics preferences when launching the game."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify internet connectivity for game updates or online play."
            },
            {
                "name": "set_do_not_disturb_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To minimize interruptions."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness for optimal game visibility."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "download_steam_game",
        "description": "Initiates the download of a game from Steam, checking for storage and connectivity.",
        "parameters": [
            {
                "name": "game_name",
                "type": "string",
                "description": "The name of the game to download.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_steam",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is logged in before downloading a game."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure internet connectivity for downloading the game."
            },
            {
                "name": "get_current_storage_space",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure sufficient storage is available for the game download."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "login_to_uber",
        "description": "Logs into the Uber app, verifying user credentials and fetching saved payment methods, while considering the user's preferred system currency.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address associated with the Uber account.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the Uber account.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email is valid before logging into the Uber app."
            },
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch the user's preferred currency for displaying ride fares and payment methods."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure a stable internet connection for booking the ride."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm that the Uber app is installed on the device."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness for the vehicle."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "book_uber_ride",
        "description": "Books an Uber ride based on the user's current location and ride preferences.",
        "parameters": [
            {
                "name": "destination",
                "type": "string",
                "description": "The desired destination for the ride.",
                "required": true
            },
            {
                "name": "start_location",
                "type": "string",
                "description": "The user's current location or preferred starting point for the ride.",
                "required": true
            },
            {
                "name": "ride_type",
                "type": "string",
                "description": "The type of ride to book (e.g., 'UberX', 'UberXL', 'Comfort').",
                "enum": [
                    "UberX",
                    "UberXL",
                    "Comfort",
                    "Black"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_uber",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is authenticated before booking a ride."
            },
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "start_location",
                "reason": "To use the user's current location as the ride's starting point."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "ride_type",
                "reason": "To optionally provide more context about the user regarding their ride type."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "cancel_uber_ride",
        "description": "Cancels the active booked Uber ride and calculates any applicable cancellation fees. Since you can only book a single ride at a time, the cancellation is based on the current booking.",
        "parameters": [],
        "depends_on": [
            {
                "name": "login_to_uber",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the user is authenticated before cancelling the ride."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "control_alexa_smart_light",
        "description": "Controls Alexa smart lights by turning them on/off or adjusting brightness, depending on user settings.",
        "parameters": [
            {
                "name": "room_name",
                "type": "string",
                "description": "The name of the room where the light is located.",
                "required": true
            },
            {
                "name": "action",
                "type": "string",
                "description": "The action to perform (e.g., 'on', 'off', 'adjust_brightness').",
                "enum": [
                    "on",
                    "off",
                    "adjust_brightness"
                ],
                "required": true
            },
            {
                "name": "brightness_level",
                "type": "integer",
                "description": "The brightness level to set if the action is 'adjust_brightness'.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "brightness_level",
                "reason": "To retrieve the user's default light preferences (e.g., brightness levels, room preferences)."
            },
            {
                "name": "update_application_by_name",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Alexa app is up-to-date before executing smart light commands."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi connectivity for controlling smart lights."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "set_alexa_thermostat_temperature",
        "description": "Sets the Alexa thermostat temperature for a specific time, ensuring scheduling accuracy.",
        "parameters": [
            {
                "name": "temperature",
                "type": "integer",
                "description": "The temperature to set on the thermostat.",
                "required": true
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time to apply the temperature setting in HH:MM format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the thermostat schedule aligns with today's date."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that the specified time is in the future."
            },
            {
                "name": "update_application_by_name",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Alexa app is updated before modifying thermostat settings."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi connectivity for controlling the thermostat."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "enable_alexa_smart_camera",
        "description": "Activates an Alexa-enabled smart camera, ensuring stable Wi-Fi connectivity.",
        "parameters": [
            {
                "name": "camera_id",
                "type": "string",
                "description": "The unique ID of the smart camera to activate.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable Wi-Fi connectivity before enabling the camera."
            },
            {
                "name": "update_application_by_name",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm the Alexa app is up-to-date before activating the camera."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "control_google_smart_light",
        "description": "Controls Google smart lights by turning them on/off or adjusting brightness, depending on user settings.",
        "parameters": [
            {
                "name": "room_name",
                "type": "string",
                "description": "The name of the room where the light is located.",
                "required": true
            },
            {
                "name": "action",
                "type": "string",
                "description": "The action to perform (e.g., 'on', 'off', 'adjust_brightness').",
                "enum": [
                    "on",
                    "off",
                    "adjust_brightness"
                ],
                "required": true
            },
            {
                "name": "brightness_level",
                "type": "integer",
                "description": "The brightness level to set if the action is 'adjust_brightness'.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_user_settings",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the user's default light preferences (e.g., brightness levels, room preferences)."
            },
            {
                "name": "update_application_by_name",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Google Home app is up-to-date before executing smart light commands."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi connectivity for controlling smart lights."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "set_google_home_thermostat_temperature",
        "description": "Sets the Google Home thermostat temperature for a specific time, ensuring scheduling accuracy.",
        "parameters": [
            {
                "name": "temperature",
                "type": "integer",
                "description": "The temperature to set on the thermostat.",
                "required": true
            },
            {
                "name": "time",
                "type": "string",
                "description": "The time to apply the temperature setting in HH:MM format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the thermostat schedule aligns with today's date."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify that the specified time is in the future."
            },
            {
                "name": "update_application_by_name",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the Google Home app is updated before modifying thermostat settings."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi connectivity for controlling the thermostat."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "enable_google_smart_camera",
        "description": "Activates a Google-enabled smart camera, ensuring stable Wi-Fi connectivity.",
        "parameters": [
            {
                "name": "camera_id",
                "type": "string",
                "description": "The unique ID of the smart camera to activate.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable Wi-Fi connectivity before enabling the camera."
            },
            {
                "name": "update_application_by_name",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm the Google Home app is up-to-date before activating the camera."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "place_instacart_order",
        "description": "Places a grocery order, verifying delivery times based on current weather conditions and time of day.",
        "parameters": [
            {
                "name": "items",
                "type": "array",
                "description": "A list of grocery items to include in the order.",
                "required": true
            },
            {
                "name": "delivery_time",
                "type": "string",
                "description": "The desired delivery time in HH:MM format.",
                "required": true
            },
            {
                "name": "delivery_date",
                "type": "string",
                "description": "The desired delivery date in YYYY-MM-DD format. If not specified, put current date.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_time",
                "reason": "To ensure the delivery time aligns with current availability."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify weather conditions that might impact delivery schedules."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check for holidays that might affect delivery availability or timing."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_date",
                "reason": "To ensure the requested delivery date is valid."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable internet connectivity for placing the order."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide a backup internet connection if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_instacart_order",
        "description": "Tracks a grocery order in real-time, providing updates on the delivery's current location.",
        "parameters": [
            {
                "name": "order_id",
                "type": "string",
                "description": "The unique ID of the order to track.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve real-time updates on the delivery's current location."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable internet connectivity for placing the order."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide a backup internet connection if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "place_doordash_order",
        "description": "Places a grocery or meal order, verifying delivery availability based on time, weather, and holidays.",
        "parameters": [
            {
                "name": "items",
                "type": "array",
                "description": "A list of items or meals to include in the order.",
                "required": true
            },
            {
                "name": "delivery_time",
                "type": "string",
                "description": "The desired delivery time in HH:MM format.",
                "required": true
            },
            {
                "name": "delivery_date",
                "type": "string",
                "description": "The desired delivery date in YYYY-MM-DD format. If not specified, put current date.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_time",
                "reason": "To confirm that the requested delivery time is feasible."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To account for weather conditions that might affect delivery times."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_date",
                "reason": "To ensure the requested delivery date is valid."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure delivery availability on holidays or during special events."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable internet connectivity for placing the order."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide a backup internet connection if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_doordash_order",
        "description": "Tracks the current status and location of a DoorDash delivery order.",
        "parameters": [
            {
                "name": "order_id",
                "type": "string",
                "description": "The unique ID of the DoorDash order to track.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide real-time updates on the delivery's location."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable internet connectivity for placing the order."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide a backup internet connection if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "place_ubereats_order",
        "description": "Places a food or grocery order through Uber Eats, verifying delivery availability and timing.",
        "parameters": [
            {
                "name": "items",
                "type": "array",
                "description": "A list of items or meals to include in the order.",
                "required": true
            },
            {
                "name": "delivery_date",
                "type": "string",
                "description": "The desired delivery date in YYYY-MM-DD format. If not specified, put current date.",
                "required": true
            },
            {
                "name": "delivery_time",
                "type": "string",
                "description": "The desired delivery time in HH:MM format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_time",
                "reason": "To confirm that the requested delivery time is feasible."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "delivery_date",
                "reason": "To ensure the requested delivery date is valid."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To account for weather conditions that might affect delivery availability or timing."
            },
            {
                "name": "get_us_national_holiday",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check for holidays that might impact delivery schedules."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable internet connectivity for placing the order."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide a backup internet connection if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_ubereats_order",
        "description": "Tracks the status and real-time location of an Uber Eats delivery order.",
        "parameters": [
            {
                "name": "order_id",
                "type": "string",
                "description": "The unique ID of the Uber Eats order to track.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable internet connectivity for placing the order."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide a backup internet connection if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "upload_medical_records",
        "description": "Uploads medical records for a doctor's appointment or for patient history, ensuring the file exists and is in the correct format.",
        "parameters": [
            {
                "name": "file_name",
                "type": "string",
                "description": "The name of the file containing the medical records to upload.",
                "required": true
            },
            {
                "name": "file_type",
                "type": "string",
                "description": "The format of the file (e.g., 'PDF', 'JPEG').",
                "enum": [
                    "PDF",
                    "JPEG",
                    "PNG"
                ],
                "required": true
            },
            {
                "name": "appointment_id",
                "type": "string",
                "description": "The appointment ID associated with the medical records.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "search_file_system",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "file_name",
                "reason": "To ensure the specified file exists before uploading."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable internet connectivity for uploading the file."
            },
            {
                "name": "get_doctor_appointments",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide context for the medical records being uploaded."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "join_doctor_virtual_consultation",
        "description": "Joins a virtual consultation session with a doctor, ensuring a valid session ID and stable internet connectivity.",
        "parameters": [
            {
                "name": "appointment_id",
                "type": "string",
                "description": "The appointment ID of the virtual consultation session.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable Wi-Fi connectivity for the virtual consultation."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide a fallback connection using cellular data if Wi-Fi is unavailable."
            },
            {
                "name": "get_doctor_appointments",
                "dependence_type": "PARAMETER_DEPENDS_ON",
                "parameter_name": "appointment_id",
                "reason": "To verify the appointment ID and ensure it belongs to the patient."
            },
            {
                "name": "set_do_not_disturb_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If do not disturb is needed for the consultation."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness for the consultation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "cancel_doctors_appointment",
        "description": "Cancels a scheduled doctor's appointment, verifying the appointment ID and checking the cancellation policy.",
        "parameters": [
            {
                "name": "appointment_id",
                "type": "string",
                "description": "The unique ID of the appointment to be canceled. And shows the cancellation policy.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check if the cancellation falls within the allowed time frame to avoid penalties."
            },
            {
                "name": "get_doctor_appointments",
                "dependence_type": "PARAMETER_DEPENDS_ON",
                "parameter_name": "appointment_id",
                "reason": "To verify the appointment ID and ensure it belongs to the patient."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_doctor_appointments",
        "description": "Retrieves a list of all doctor appointments currently scheduled for a patient and returns appointment_ids.",
        "parameters": [
            {
                "name": "status",
                "type": "string",
                "description": "The status of the appointments to retrieve (e.g., 'upcoming', 'past', 'all').",
                "enum": [
                    "upcoming",
                    "past",
                    "all"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure stable Wi-Fi connectivity for database connection."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "retrieve_stock_price_history",
        "description": "Fetches historical stock price data for a given stock ticker and date range.",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol to fetch historical price data for.",
                "required": true
            },
            {
                "name": "start_date",
                "type": "string",
                "description": "The start date for the historical data range in YYYY-MM-DD format.",
                "required": true
            },
            {
                "name": "end_date",
                "type": "string",
                "description": "The end date for the historical data range in YYYY-MM-DD format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To ensure the stock ticker is valid before retrieving price history."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "end_date",
                "reason": "If no end date is provided, defaults to the current date."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_stock_volatility_data",
        "description": "Retrieves stock volatility data for a given stock ticker and date range.",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol to fetch volatility data for.",
                "required": true
            },
            {
                "name": "start_date",
                "type": "string",
                "description": "The start date for the volatility analysis in YYYY-MM-DD format.",
                "required": true
            },
            {
                "name": "end_date",
                "type": "string",
                "description": "The end date for the volatility analysis in YYYY-MM-DD format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To validate the stock ticker before fetching volatility data."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "end_date",
                "reason": "To ensure the end date defaults to the current date if not provided."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_current_stock_price",
        "description": "Retrieves the current stock price for a given stock ticker symbol.",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol to fetch the current price for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To validate and standardize the stock ticker symbol before fetching the price."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_commute_carbon_footprint",
        "description": "Estimates the daily carbon footprint of a commute.",
        "parameters": [
            {
                "name": "transport_mode",
                "type": "string",
                "description": "The mode of transport",
                "enum": [
                    "car",
                    "bus",
                    "bike",
                    "walk"
                ],
                "required": true
            },
            {
                "name": "distance_km",
                "type": "float",
                "description": "The commute distance in kilometers.",
                "required": true
            },
            {
                "name": "date",
                "type": "string",
                "description": "The current date as carbon footprint may vary seasonally. In format 'YYYY-MM-DD'.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To associate the calculation with today's date or a relative date from user."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure online access to emission factor data if needed."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "distance_km",
                "reason": "To convert the distance if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_home_energy_carbon_footprint",
        "description": "Estimates the daily carbon footprint from home energy consumption based on average kWh usage.",
        "parameters": [
            {
                "name": "daily_kwh",
                "type": "float",
                "description": "Average daily electricity consumption in kWh.",
                "required": true
            },
            {
                "name": "date",
                "type": "string",
                "description": "The current date as carbon footprint may vary seasonally. In format 'YYYY-MM-DD'.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure online access to emission factor data if needed."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "daily_kwh",
                "reason": "To convert the kWh usage if from_unit != to_unit."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "date",
                "reason": "To associate the calculation with today's date or a relative date from user."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_meal_carbon_footprint",
        "description": "Calculates the approximate carbon footprint of a single meal based on its ingredients.",
        "parameters": [
            {
                "name": "ingredients",
                "type": "list",
                "description": "A list of ingredients with their quantities. For example, ['beef, 200g', 'rice, 100g', 'tomato, 50g']",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To connect to Wi-Fi."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "assess_local_carbon_intensity",
        "description": "Assesses the carbon intensity of electricity in a current region.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A location.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine regional emission factors based on a location."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To connect to online databases for local emission data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_flight_carbon_footprint",
        "description": "Estimates the carbon footprint of a flight based on flight distance and travel class.",
        "parameters": [
            {
                "name": "distance_km",
                "type": "float",
                "description": "The distance of the flight in kilometers.",
                "required": true
            },
            {
                "name": "travel_class",
                "type": "string",
                "description": "The travel class (e.g., 'economy', 'business', 'first_class').",
                "enum": [
                    "economy",
                    "business",
                    "first_class"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To log the flight's date, useful for monthly or yearly carbon tracking."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access updated emission factors for air travel."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "distance_km",
                "reason": "To convert the flight distance if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "monitor_daily_water_heating_footprint",
        "description": "Monitors the carbon footprint associated with daily water heating usage.",
        "parameters": [
            {
                "name": "hot_water_liters",
                "type": "float",
                "description": "Liters of hot water used per day.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve the latest emission factors for the energy source used for heating."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "hot_water_liters",
                "reason": "To convert water volume if from_unit != to_unit."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "daily_hot_water_liters",
                "reason": "To convert the volume if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "evaluate_clothing_purchase_carbon_footprint",
        "description": "Estimates the carbon footprint of purchasing a clothing item based on material and manufacturing origin.",
        "parameters": [
            {
                "name": "material_type",
                "type": "string",
                "description": "The type of material (e.g., 'cotton', 'polyester').",
                "enum": [
                    "cotton",
                    "polyester",
                    "nylon",
                    "wool",
                    "silk"
                ],
                "required": true
            },
            {
                "name": "origin_country",
                "type": "string",
                "description": "The country where the clothing item was manufactured.",
                "enum": [
                    "China",
                    "India",
                    "United States",
                    "Bangladesh",
                    "Vietnam",
                    "Turkey",
                    "Pakistan",
                    "Germany",
                    "Italy",
                    "France",
                    "United Kingdom",
                    "Spain",
                    "Japan",
                    "South Korea",
                    "Netherlands",
                    "Australia",
                    "Brazil",
                    "Canada",
                    "Mexico",
                    "Russia",
                    "South Africa",
                    "Argentina",
                    "Chile",
                    "Colombia",
                    "Peru",
                    "Egypt"
                ],
                "required": true
            },
            {
                "name": "arrival_country",
                "type": "string",
                "description": "The country where the clothing item will be shipped.",
                "required": true
            },
            {
                "name": "distance_km",
                "type": "float",
                "description": "Distance traveled in km for shipping the clothing item.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access online emission factor data for different materials and supply chains."
            },
            {
                "name": "get_current_location",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "arrival_country",
                "reason": "To help factor in the distance from shipping location to the ordering location."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "distance_km",
                "reason": "To convert the shipping distance if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_video_streaming_carbon_footprint",
        "description": "Calculates the carbon footprint of streaming video content based on duration and resolution.",
        "parameters": [
            {
                "name": "duration_minutes",
                "type": "int",
                "description": "The duration of streaming in minutes.",
                "required": true
            },
            {
                "name": "resolution",
                "type": "string",
                "description": "The streaming resolution (e.g., 'SD', 'HD', '4K').",
                "enum": [
                    "SD",
                    "HD",
                    "4K"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve updated emission data for data center energy use."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "duration_minutes",
                "reason": "To convert the time if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "assess_electronic_device_manufacturing_footprint",
        "description": "Estimates the manufacturing carbon footprint of an electronic device (e.g., smartphone, laptop).",
        "parameters": [
            {
                "name": "device_type",
                "type": "string",
                "description": "The type of device (e.g., 'smartphone', 'laptop').",
                "enum": [
                    "laptop",
                    "smartphone",
                    "tablet",
                    "desktop_computer"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch emission factors from online product lifecycle databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "compare_car_vs_public_transit_footprint",
        "description": "Compares the carbon footprint of traveling a certain distance by car versus public transit.",
        "parameters": [
            {
                "name": "distance_km",
                "type": "float",
                "description": "The distance of the trip in kilometers.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To record the comparison date, helpful for tracking changes over time."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "distance_km",
                "reason": "To convert the trip distance if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "recommend_green_energy_usage_times",
        "description": "Suggests times of day to use high-energy appliances when grid carbon intensity might be lower.",
        "parameters": [
            {
                "name": "appliance_type",
                "type": "string",
                "description": "The type of appliance (e.g., 'washing machine', 'dishwasher').",
                "enum": [
                    "washing_machine",
                    "dishwasher",
                    "clothes_dryer",
                    "oven",
                    "microwave"
                ],
                "required": true
            },
            {
                "name": "location",
                "type": "string",
                "description": "A location.",
                "required": true
            },
            {
                "name": "current_time",
                "type": "string",
                "description": "The current time in 'HH:MM:SS' format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "current_time",
                "reason": "To align energy usage suggestions with off-peak or lower-intensity times."
            },
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "current_location",
                "reason": "To factor in local grid data and renewable energy availability."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_packaging_waste_footprint",
        "description": "Estimates the carbon footprint of packaging waste (cardboard, plastic) from online orders.",
        "parameters": [
            {
                "name": "items_ordered",
                "type": "int",
                "description": "Number of items ordered in a shipment.",
                "required": true
            },
            {
                "name": "packaging_type",
                "type": "string",
                "description": "Type of packaging (e.g., 'cardboard', 'plastic').",
                "enum": [
                    "cardboard",
                    "plastic"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve emission data for different packaging materials."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "evaluate_shipping_mode_footprint",
        "description": "Evaluates carbon footprint differences between shipping modes (e.g., air vs. sea) for imported goods.",
        "parameters": [
            {
                "name": "shipping_mode",
                "type": "string",
                "description": "Mode of shipping (e.g., 'air', 'sea').",
                "enum": [
                    "air",
                    "sea",
                    "truck",
                    "train",
                    "ship"
                ],
                "required": true
            },
            {
                "name": "distance_km",
                "type": "float",
                "description": "Shipping distance in kilometers.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access updated emission factors for different transportation methods."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "distance_km",
                "reason": "To convert the shipping distance if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_electronic_usage_footprint",
        "description": "Estimates the daily carbon footprint of using electronic devices (e.g., laptops, TVs) based on screen time.",
        "parameters": [
            {
                "name": "screen_time_hours",
                "type": "float",
                "description": "Total hours of screen time per day across all devices.",
                "required": true
            },
            {
                "name": "device_type",
                "type": "string",
                "description": "The type of device (e.g., 'laptop', 'TV').",
                "enum": [
                    "laptop",
                    "smartphone",
                    "tablet",
                    "desktop_computer"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access current emission factors for device electricity usage."
            },
            {
                "name": "get_screen_time_data",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "screen_time_hours",
                "reason": "To get the screentime if not provided by the user."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "check_local_air_quality_index",
        "description": "Retrieves the local air quality index (AQI) based on a current location.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current or specified location for checking air quality.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If a relative location is requested (e.g., 'my location'), it uses the device's actual location."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure there is an active internet connection for retrieving AQI data from an online source."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "check_water_quality_status",
        "description": "Checks the water quality or contamination level in a specified region.",
        "parameters": [
            {
                "name": "region",
                "type": "string",
                "description": "The area or municipality for which to check water quality.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve real-time or reported water quality data from an online database or local authority."
            },
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "region",
                "reason": "If the user wants the water quality for 'my area', it uses the device's location to find the relevant region."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "evaluate_recycling_options",
        "description": "Lists available recycling centers or programs near the user and the categories of materials they accept.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current location or a specified city/region.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If the user provides 'my location', it uses device location to find the nearest recycling centers."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch updated data from local municipality or third-party recycling facility databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "forecast_local_smog_alerts",
        "description": "Provides a short-term forecast for smog or pollution alerts in a region.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current or target location for checking smog alerts.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If no specific location is given, it uses the device's location to determine smog forecast data."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access real-time pollution or weather APIs for short-term smog alert forecasts."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "check_local_soil_quality",
        "description": "Retrieves or estimates soil quality indicators (e.g., pH, nutrient content) for a given area.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current or specified location for checking soil quality.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If the user provides a relative location ('my area'), it uses the device\u2019s actual location."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve local soil quality data from online databases or agricultural extensions."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "monitor_lawn_health",
        "description": "Estimates lawn or grass health using weather data, soil moisture, and local conditions to recommend care routines.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current or specified location where the lawn is located.",
                "required": true
            },
            {
                "name": "lawn_area_m2",
                "type": "float",
                "description": "Approximate lawn size in square meters.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If the user says 'my location,' it uses the device location to fetch local weather/soil data."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve climate or weather updates, plus recommended lawn-care steps."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "lawn_area_m2",
                "reason": "If lawn size is provided in a different unit (e.g., sq ft), it converts to square meters."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_forest_fire_risk",
        "description": "Monitors and forecasts wildfire risk based on local conditions such as temperature, humidity, and dryness.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The geographic area (city, region, or coordinate) for checking fire risk.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If the user wants their current area, it uses the device's coordinates to determine local conditions."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch near-real-time fire hazard data from weather or forestry APIs."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "measure_local_pollen_count",
        "description": "Checks pollen levels to help users with allergies or sensitivity plan outdoor activities.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current or target location for pollen data.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If 'my area' is selected, the device location is used for local pollen counts."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve up-to-date pollen and allergen data from regional sources."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "detect_noise_pollution_levels",
        "description": "Analyzes noise pollution levels in a specific area and evaluates them against standard thresholds.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current or specified location for detecting noise pollution.",
                "required": true
            },
            {
                "name": "max_safe_dB",
                "type": "float",
                "description": "The maximum safe noise level in decibels (dB). Defaults to 70 dB as per WHO standards.",
                "required": false,
                "default": 70
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "If the user provides 'my location,' it uses device coordinates to determine local noise pollution data."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve noise pollution levels from local monitoring stations or public databases."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "max_safe_dB",
                "reason": "To convert the sound if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_property_value",
        "description": "Estimates the current market value of a property based on location and size.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location of the property.",
                "required": true
            },
            {
                "name": "property_size_m2",
                "type": "float",
                "description": "The size of the property in square meters.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To fetch the regional property data for estimation."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "property_size_m2",
                "reason": "To ensure property size is converted to the desired unit for accurate calculations."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch up-to-date market trends and sales data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_mortgage_affordability",
        "description": "Calculates the maximum mortgage amount a user can afford based on income, expenses, and interest rates.",
        "parameters": [
            {
                "name": "annual_income",
                "type": "float",
                "description": "User's annual income.",
                "required": true
            },
            {
                "name": "monthly_expenses",
                "type": "float",
                "description": "User's average monthly expenses.",
                "required": true
            },
            {
                "name": "interest_rate_percent",
                "type": "float",
                "description": "Current mortgage interest rate in percent.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch updated interest rates and financial guidelines."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearby_real_estate_agents",
        "description": "Locates real estate agents near a location and provides contact information.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "A current or specified location.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To determine the user's proximity to real estate agents."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve real-time contact information from online databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_rental_yield",
        "description": "Calculates the rental yield of a property as a percentage of its market value.",
        "parameters": [
            {
                "name": "annual_rental_income",
                "type": "float",
                "description": "The annual rental income from the property.",
                "required": true
            },
            {
                "name": "property_value",
                "type": "float",
                "description": "The current market value of the property.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "estimate_property_value",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "property_value",
                "reason": "To calculate the rental yield based on the property's estimated value."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_home_renovation_costs",
        "description": "Provides an estimate for home renovation costs based on property size and renovation type.",
        "parameters": [
            {
                "name": "property_size_m2",
                "type": "float",
                "description": "The size of the property in square meters.",
                "required": true
            },
            {
                "name": "renovation_type",
                "type": "string",
                "description": "Type of renovation (e.g., 'kitchen', 'bathroom', 'full').",
                "required": true,
                "enum": [
                    "kitchen",
                    "bathroom",
                    "full"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "property_size_m2",
                "reason": "To ensure the property size is in a standard unit for cost estimation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "analyze_neighborhood_amenities",
        "description": "Lists amenities (e.g., schools, parks, hospitals) near a specified property.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The location of the property.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "To identify nearby amenities based on the property location."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve updated amenity information from online sources."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "assess_green_home_features",
        "description": "Analyzes the eco-friendliness of a property based on features like solar panels, energy-efficient appliances, and insulation.",
        "parameters": [
            {
                "name": "features",
                "type": "list",
                "description": "A list of eco-friendly features in the property.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve updated amenity information from online sources."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "compare_home_insurance_costs",
        "description": "Provides a comparison of home insurance premiums across providers.",
        "parameters": [
            {
                "name": "property_value",
                "type": "float",
                "description": "The market value of the property.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch insurance cost details from providers."
            },
            {
                "name": "estimate_property_value",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "property_value",
                "reason": "To calculate the rental yield based on the property's estimated value."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_real_estate_market_trends",
        "description": "Tracks price trends in the real estate market for a specific region.",
        "parameters": [
            {
                "name": "region",
                "type": "string",
                "description": "The region to track market trends in.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch up-to-date market trend data from online resources."
            },
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "region",
                "reason": "If the user wants trends for 'my area', it uses the device's location."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "draft_rental_application",
        "description": "Helps renters draft a standard rental application with their details and references.",
        "parameters": [
            {
                "name": "name",
                "type": "string",
                "description": "Full name of the renter.",
                "required": true
            },
            {
                "name": "email",
                "type": "string",
                "description": "Renter's email address.",
                "required": true
            },
            {
                "name": "phone_number",
                "type": "string",
                "description": "Renter's phone number.",
                "required": true
            },
            {
                "name": "employment_status",
                "type": "string",
                "description": "Current employment status.",
                "required": true
            },
            {
                "name": "monthly_income",
                "type": "float",
                "description": "Monthly income of the renter.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity for fetching standardized application templates."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To validate the email address format."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_rent_to_income_ratio",
        "description": "Calculates the percentage of monthly income spent on rent.",
        "parameters": [
            {
                "name": "monthly_rent",
                "type": "float",
                "description": "Monthly rent amount.",
                "required": true
            },
            {
                "name": "monthly_income",
                "type": "float",
                "description": "Renter's monthly income.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "monthly_rent,monthly_income",
                "reason": "Ensures income and rent are in the same currency for accurate calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "search_lease_templates",
        "description": "Provides downloadable lease agreement templates based on the state or country.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "The state or country for which the lease template is required.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Uses the user's current location if location is not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity for downloading templates."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "track_lease_expiration_dates",
        "description": "Tracks lease expiration dates and sends reminders for renewals or terminations.",
        "parameters": [
            {
                "name": "lease_end_date",
                "type": "string",
                "description": "The end date of the current lease (format: YYYY-MM-DD).",
                "required": true
            },
            {
                "name": "reminder_days",
                "type": "int",
                "description": "Number of days before the lease end to send a reminder.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Sends reminders through email or notifications."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "lease_end_date",
                "reason": "For relative dates if user gives."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine if notifications are already enabled."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_security_deposit",
        "description": "Estimates the security deposit required for a rental based on property size and location.",
        "parameters": [
            {
                "name": "property_size_sqft",
                "type": "float",
                "description": "Size of the rental property in square feet.",
                "required": true
            },
            {
                "name": "location",
                "type": "string",
                "description": "The location of the rental property.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "property_size_sqft",
                "reason": "Converts the property size to the desired unit."
            },
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Uses the user's location if not provided."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "generate_rental_lease_addendum",
        "description": "Drafts a lease addendum to modify or clarify terms in an existing lease agreement.",
        "parameters": [
            {
                "name": "lease_terms",
                "type": "list",
                "description": "List of terms to be modified or added.",
                "required": true
            },
            {
                "name": "rental_address",
                "type": "string",
                "description": "Address of the rental property.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity for accessing lease addendum templates."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_shared_utility_costs",
        "description": "Splits utility costs among renters based on property size or usage.",
        "parameters": [
            {
                "name": "total_cost",
                "type": "float",
                "description": "Total utility cost.",
                "required": true
            },
            {
                "name": "num_renters",
                "type": "int",
                "description": "Number of renters sharing the property.",
                "required": true
            },
            {
                "name": "property_size_sqft",
                "type": "float",
                "description": "Size of the property (optional, for proportional cost splitting).",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "property_size_sqft",
                "reason": "Converts property size to the desired unit for accurate splitting."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "search_pet_friendly_rentals",
        "description": "Filters rental listings for pet-friendly options.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "Location to search for rentals.",
                "required": true
            },
            {
                "name": "pet_type",
                "type": "string",
                "description": "Type of pet (e.g., 'dog', 'cat').",
                "enum": [
                    "dog",
                    "cat",
                    "other"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Uses the user's current location if location is not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to access rental listing databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_lease_break_fees",
        "description": "Estimates fees or penalties for breaking a lease early.",
        "parameters": [
            {
                "name": "lease_term_months",
                "type": "int",
                "description": "Original lease term in months.",
                "required": true
            },
            {
                "name": "months_remaining",
                "type": "int",
                "description": "Number of months remaining on the lease.",
                "required": true
            },
            {
                "name": "monthly_rent",
                "type": "float",
                "description": "Monthly rent amount.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "monthly_rent",
                "reason": "Ensures rent is in the desired currency for accurate calculations."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "monthly_rent",
                "reason": "To calculate relative dates if user says my lease ends at a specific date."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "geofence_defender",
        "description": "Enforces geolocation-based access controls using timezone data to restrict access.",
        "parameters": [
            {
                "name": "authorized_regions",
                "type": "list",
                "description": "List of authorized geographic regions. To check against the current timezone",
                "required": true
            },
            {
                "name": "current_timezone",
                "type": "string",
                "description": "Current timezone of the system to compare against authorized regions.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_system_timezone",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "current_timezone",
                "reason": "To enforce geolocation-based access rules."
            },
            {
                "name": "get_current_location",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine the current geographic location."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "data_breach_alert_system",
        "description": "Notifies users when their email or sensitive data appears in known data breaches.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address to monitor.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email is valid before checking for breaches."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to check breach databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "api_key_rotation_manager",
        "description": "Schedules and manages the rotation of API keys to reduce security risks.",
        "parameters": [
            {
                "name": "key_name",
                "type": "string",
                "description": "The name of the key to rotate",
                "required": true
            },
            {
                "name": "new_value",
                "type": "string",
                "description": "The new value for the API key",
                "required": true
            },
            {
                "name": "rotation_interval_days",
                "type": "int",
                "description": "The number of days this key value will stay valid for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "new_value",
                "reason": "To generate a new API key during the rotation process."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "planet_fitness_user_login",
        "description": "Logs the user into their Planet Fitness account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Planet Fitness login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log into the Planet Fitness account."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "planet_fitness_track_workout",
        "description": "Tracks the user's workout progress on the Planet Fitness app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Planet Fitness.",
                "required": true
            },
            {
                "name": "workout_type",
                "type": "string",
                "description": "The type of workout (e.g., 'cardio', 'strength').",
                "required": true
            },
            {
                "name": "duration_minutes",
                "type": "int",
                "description": "The duration of the workout in minutes.",
                "required": true
            },
            {
                "name": "calories_burned",
                "type": "float",
                "description": "Calories burned during the workout.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "planet_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Planet Fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log workout data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "planet_fitness_generate_workout_plan",
        "description": "Generates a personalized workout plan for the user based on their fitness goals.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Planet Fitness.",
                "required": true
            },
            {
                "name": "goal",
                "type": "string",
                "description": "User's fitness goal (e.g., 'weight loss', 'muscle gain').",
                "required": true
            },
            {
                "name": "fitness_level",
                "type": "string",
                "description": "The user's fitness level (e.g., 'beginner', 'intermediate', 'advanced').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "planet_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Planet Fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to fetch workout plans."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "fitness_level,goal",
                "reason": "To optionally provide user profile data for pre-filling preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "planet_fitness_log_workout_notes",
        "description": "Allows users to log notes about their workout sessions.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Planet Fitness.",
                "required": true
            },
            {
                "name": "workout_id",
                "type": "string",
                "description": "The unique identifier for the workout session.",
                "required": true
            },
            {
                "name": "notes",
                "type": "string",
                "description": "User's notes about the workout.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "planet_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Planet Fitness user is logged in and has a valid session ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "planet_fitness_schedule_class",
        "description": "Allows users to schedule fitness classes through the Planet Fitness app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Planet Fitness.",
                "required": true
            },
            {
                "name": "class_name",
                "type": "string",
                "description": "The name of the class to schedule.",
                "required": true
            },
            {
                "name": "class_time",
                "type": "string",
                "description": "The time of the class (e.g., '2023-01-20T10:00').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "planet_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Planet Fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to schedule fitness classes."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "equinox_user_login",
        "description": "Logs the user into their Equinox account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Equinox login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log into the Equinox account."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "equinox_track_workout",
        "description": "Tracks the user's workout progress on the Equinox app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Equinox.",
                "required": true
            },
            {
                "name": "workout_type",
                "type": "string",
                "description": "The type of workout (e.g., 'cardio', 'strength').",
                "required": true
            },
            {
                "name": "duration_minutes",
                "type": "int",
                "description": "The duration of the workout in minutes.",
                "required": true
            },
            {
                "name": "calories_burned",
                "type": "float",
                "description": "Calories burned during the workout.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "equinox_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Equinox user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log workout data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "equinox_generate_workout_plan",
        "description": "Generates a personalized workout plan for the user based on their fitness goals.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Equinox.",
                "required": true
            },
            {
                "name": "goal",
                "type": "string",
                "description": "User's fitness goal (e.g., 'weight loss', 'muscle gain').",
                "required": true
            },
            {
                "name": "fitness_level",
                "type": "string",
                "description": "The user's fitness level (e.g., 'beginner', 'intermediate', 'advanced').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "equinox_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Equinox user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to fetch workout plans."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "fitness_level,goal",
                "reason": "To optionally provide user profile data for pre-filling preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "equinox_log_workout_notes",
        "description": "Allows users to log notes about their workout sessions.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Equinox.",
                "required": true
            },
            {
                "name": "workout_id",
                "type": "string",
                "description": "The unique identifier for the workout session.",
                "required": true
            },
            {
                "name": "notes",
                "type": "string",
                "description": "User's notes about the workout.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "equinox_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Equinox user is logged in and has a valid session ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "equinox_schedule_class",
        "description": "Allows users to schedule fitness classes through the Equinox app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Equinox.",
                "required": true
            },
            {
                "name": "class_name",
                "type": "string",
                "description": "The name of the class to schedule.",
                "required": true
            },
            {
                "name": "class_time",
                "type": "string",
                "description": "The time of the class (e.g., '2023-01-20T10:00').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "equinox_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Equinox user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to schedule fitness classes."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "crunch_fitness_user_login",
        "description": "Logs the user into their crunch_fitness account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before crunch_fitness login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log into the crunch_fitness account."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "crunch_fitness_track_workout",
        "description": "Tracks the user's workout progress on the crunch_fitness app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into crunch_fitness.",
                "required": true
            },
            {
                "name": "workout_type",
                "type": "string",
                "description": "The type of workout (e.g., 'cardio', 'strength').",
                "required": true
            },
            {
                "name": "duration_minutes",
                "type": "int",
                "description": "The duration of the workout in minutes.",
                "required": true
            },
            {
                "name": "calories_burned",
                "type": "float",
                "description": "Calories burned during the workout.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "crunch_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the crunch_fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log workout data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "crunch_fitness_generate_workout_plan",
        "description": "Generates a personalized workout plan for the user based on their fitness goals.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into crunch_fitness.",
                "required": true
            },
            {
                "name": "goal",
                "type": "string",
                "description": "User's fitness goal (e.g., 'weight loss', 'muscle gain').",
                "required": true
            },
            {
                "name": "fitness_level",
                "type": "string",
                "description": "The user's fitness level (e.g., 'beginner', 'intermediate', 'advanced').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "crunch_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the crunch_fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to fetch workout plans."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "fitness_level,goal",
                "reason": "To optionally provide user profile data for pre-filling preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "crunch_fitness_log_workout_notes",
        "description": "Allows users to log notes about their workout sessions.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into crunch_fitness.",
                "required": true
            },
            {
                "name": "workout_id",
                "type": "string",
                "description": "The unique identifier for the workout session.",
                "required": true
            },
            {
                "name": "notes",
                "type": "string",
                "description": "User's notes about the workout.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "crunch_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the crunch_fitness user is logged in and has a valid session ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "crunch_fitness_schedule_class",
        "description": "Allows users to schedule fitness classes through the crunch_fitness app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into crunch_fitness.",
                "required": true
            },
            {
                "name": "class_name",
                "type": "string",
                "description": "The name of the class to schedule.",
                "required": true
            },
            {
                "name": "class_time",
                "type": "string",
                "description": "The time of the class (e.g., '2023-01-20T10:00').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "crunch_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the crunch_fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to schedule fitness classes."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "golds_gym_user_login",
        "description": "Logs the user into their golds_gym account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before golds_gym login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log into the golds_gym account."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "golds_gym_track_workout",
        "description": "Tracks the user's workout progress on the golds_gym app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into golds_gym.",
                "required": true
            },
            {
                "name": "workout_type",
                "type": "string",
                "description": "The type of workout (e.g., 'cardio', 'strength').",
                "required": true
            },
            {
                "name": "duration_minutes",
                "type": "int",
                "description": "The duration of the workout in minutes.",
                "required": true
            },
            {
                "name": "calories_burned",
                "type": "float",
                "description": "Calories burned during the workout.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "golds_gym_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the golds_gym user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log workout data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "golds_gym_generate_workout_plan",
        "description": "Generates a personalized workout plan for the user based on their fitness goals.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into golds_gym.",
                "required": true
            },
            {
                "name": "goal",
                "type": "string",
                "description": "User's fitness goal (e.g., 'weight loss', 'muscle gain').",
                "required": true
            },
            {
                "name": "fitness_level",
                "type": "string",
                "description": "The user's fitness level (e.g., 'beginner', 'intermediate', 'advanced').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "golds_gym_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the golds_gym user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to fetch workout plans."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "fitness_level,goal",
                "reason": "To optionally provide user profile data for pre-filling preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "golds_gym_log_workout_notes",
        "description": "Allows users to log notes about their workout sessions.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into golds_gym.",
                "required": true
            },
            {
                "name": "workout_id",
                "type": "string",
                "description": "The unique identifier for the workout session.",
                "required": true
            },
            {
                "name": "notes",
                "type": "string",
                "description": "User's notes about the workout.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "golds_gym_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the golds_gym user is logged in and has a valid session ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "golds_gym_schedule_class",
        "description": "Allows users to schedule fitness classes through the golds_gym app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into golds_gym.",
                "required": true
            },
            {
                "name": "class_name",
                "type": "string",
                "description": "The name of the class to schedule.",
                "required": true
            },
            {
                "name": "class_time",
                "type": "string",
                "description": "The time of the class (e.g., '2023-01-20T10:00').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "golds_gym_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the golds_gym user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to schedule fitness classes."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "la_fitness_user_login",
        "description": "Logs the user into their la_fitness account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before la_fitness login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log into the la_fitness account."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "la_fitness_track_workout",
        "description": "Tracks the user's workout progress on the la_fitness app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into la_fitness.",
                "required": true
            },
            {
                "name": "workout_type",
                "type": "string",
                "description": "The type of workout (e.g., 'cardio', 'strength').",
                "required": true
            },
            {
                "name": "duration_minutes",
                "type": "int",
                "description": "The duration of the workout in minutes.",
                "required": true
            },
            {
                "name": "calories_burned",
                "type": "float",
                "description": "Calories burned during the workout.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "la_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the la_fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to log workout data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "la_fitness_generate_workout_plan",
        "description": "Generates a personalized workout plan for the user based on their fitness goals.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into la_fitness.",
                "required": true
            },
            {
                "name": "goal",
                "type": "string",
                "description": "User's fitness goal (e.g., 'weight loss', 'muscle gain').",
                "required": true
            },
            {
                "name": "fitness_level",
                "type": "string",
                "description": "The user's fitness level (e.g., 'beginner', 'intermediate', 'advanced').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "la_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the la_fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to fetch workout plans."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "fitness_level,goal",
                "reason": "To optionally provide user profile data for pre-filling preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "la_fitness_log_workout_notes",
        "description": "Allows users to log notes about their workout sessions.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into la_fitness.",
                "required": true
            },
            {
                "name": "workout_id",
                "type": "string",
                "description": "The unique identifier for the workout session.",
                "required": true
            },
            {
                "name": "notes",
                "type": "string",
                "description": "User's notes about the workout.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "la_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the la_fitness user is logged in and has a valid session ID."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "la_fitness_schedule_class",
        "description": "Allows users to schedule fitness classes through the la_fitness app.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into la_fitness.",
                "required": true
            },
            {
                "name": "class_name",
                "type": "string",
                "description": "The name of the class to schedule.",
                "required": true
            },
            {
                "name": "class_time",
                "type": "string",
                "description": "The time of the class (e.g., '2023-01-20T10:00').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "la_fitness_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the la_fitness user is logged in and has a valid session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to schedule fitness classes."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "amazon_user_login",
        "description": "Logs the user into their Amazon account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Amazon account login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Amazon session."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "amazon_checkout_cart",
        "description": "Checks out all items in the user's Amazon shopping cart.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Amazon.",
                "required": true
            },
            {
                "name": "payment_method",
                "type": "string",
                "description": "Payment method to use for the checkout.",
                "required": true
            },
            {
                "name": "delivery_address",
                "type": "string",
                "description": "Address for the delivery of items.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "amazon_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to process the checkout."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "amazon_delete_item_from_cart",
        "description": "Removes an item from the Amazon cart based on item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Amazon.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to remove from the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to remove from the cart. The item ID will be extracted from this link.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "amazon_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "amazon_review_item",
        "description": "Allows a user to submit a review for an item purchased on Amazon.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Amazon.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to review.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to review. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "review_text",
                "type": "string",
                "description": "The review text submitted by the user.",
                "required": true
            },
            {
                "name": "rating",
                "type": "int",
                "description": "The rating provided by the user (1-5).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "amazon_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before submitting a review."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "amazon_add_item_to_cart",
        "description": "Adds an item to the Amazon cart using item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Amazon.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to add to the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to add to the cart. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "quantity",
                "type": "int",
                "description": "The quantity of the item to add to the cart.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "amazon_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ali_express_user_login",
        "description": "Logs the user into their AliExpress account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before AliExpress account login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the AliExpress session."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ali_express_checkout_cart",
        "description": "Checks out all items in the user's AliExpress shopping cart.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into AliExpress.",
                "required": true
            },
            {
                "name": "payment_method",
                "type": "string",
                "description": "Payment method to use for the checkout.",
                "required": true
            },
            {
                "name": "delivery_address",
                "type": "string",
                "description": "Address for the delivery of items.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "ali_express_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to process the checkout."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ali_express_delete_item_from_cart",
        "description": "Removes an item from the AliExpress cart based on item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into AliExpress.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to remove from the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to remove from the cart. The item ID will be extracted from this link.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "ali_express_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ali_express_review_item",
        "description": "Allows a user to submit a review for an item purchased on AliExpress.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into AliExpress.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to review.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to review. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "review_text",
                "type": "string",
                "description": "The review text submitted by the user.",
                "required": true
            },
            {
                "name": "rating",
                "type": "int",
                "description": "The rating provided by the user (1-5).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "ali_express_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before submitting a review."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ali_express_add_item_to_cart",
        "description": "Adds an item to the AliExpress cart using item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into AliExpress.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to add to the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to add to the cart. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "quantity",
                "type": "int",
                "description": "The quantity of the item to add to the cart.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "ali_express_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ebay_user_login",
        "description": "Logs the user into their eBay account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before eBay account login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the eBay session."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ebay_checkout_cart",
        "description": "Checks out all items in the user's eBay shopping cart.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into eBay.",
                "required": true
            },
            {
                "name": "payment_method",
                "type": "string",
                "description": "Payment method to use for the checkout.",
                "required": true
            },
            {
                "name": "delivery_address",
                "type": "string",
                "description": "Address for the delivery of items.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "ebay_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to process the checkout."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ebay_delete_item_from_cart",
        "description": "Removes an item from the eBay cart based on item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into eBay.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to remove from the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to remove from the cart. The item ID will be extracted from this link.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "ebay_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ebay_review_item",
        "description": "Allows a user to submit a review for an item purchased on eBay.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into eBay.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to review.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to review. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "review_text",
                "type": "string",
                "description": "The review text submitted by the user.",
                "required": true
            },
            {
                "name": "rating",
                "type": "int",
                "description": "The rating provided by the user (1-5).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "ebay_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before submitting a review."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "ebay_add_item_to_cart",
        "description": "Adds an item to the eBay cart using item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into eBay.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to add to the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to add to the cart. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "quantity",
                "type": "int",
                "description": "The quantity of the item to add to the cart.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "ebay_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "temu_user_login",
        "description": "Logs the user into their Temu account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Temu account login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Temu session."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "temu_checkout_cart",
        "description": "Checks out all items in the user's Temu shopping cart.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Temu.",
                "required": true
            },
            {
                "name": "payment_method",
                "type": "string",
                "description": "Payment method to use for the checkout.",
                "required": true
            },
            {
                "name": "delivery_address",
                "type": "string",
                "description": "Address for the delivery of items.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "temu_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to process the checkout."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "temu_delete_item_from_cart",
        "description": "Removes an item from the Temu cart based on item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Temu.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to remove from the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to remove from the cart. The item ID will be extracted from this link.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "temu_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "temu_review_item",
        "description": "Allows a user to submit a review for an item purchased on Temu.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Temu.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to review.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to review. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "review_text",
                "type": "string",
                "description": "The review text submitted by the user.",
                "required": true
            },
            {
                "name": "rating",
                "type": "int",
                "description": "The rating provided by the user (1-5).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "temu_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before submitting a review."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "temu_add_item_to_cart",
        "description": "Adds an item to the Temu cart using item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Temu.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to add to the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to add to the cart. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "quantity",
                "type": "int",
                "description": "The quantity of the item to add to the cart.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "temu_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "etsy_user_login",
        "description": "Logs the user into their Etsy account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Etsy account login."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Etsy session."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "etsy_checkout_cart",
        "description": "Checks out all items in the user's Etsy shopping cart.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Etsy.",
                "required": true
            },
            {
                "name": "payment_method",
                "type": "string",
                "description": "Payment method to use for the checkout.",
                "required": true
            },
            {
                "name": "delivery_address",
                "type": "string",
                "description": "Address for the delivery of items.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "etsy_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to process the checkout."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "etsy_delete_item_from_cart",
        "description": "Removes an item from the Etsy cart based on item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Etsy.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to remove from the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to remove from the cart. The item ID will be extracted from this link.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "etsy_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "etsy_review_item",
        "description": "Allows a user to submit a review for an item purchased on Etsy.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Etsy.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to review.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to review. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "review_text",
                "type": "string",
                "description": "The review text submitted by the user.",
                "required": true
            },
            {
                "name": "rating",
                "type": "int",
                "description": "The rating provided by the user (1-5).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "etsy_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before submitting a review."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "etsy_add_item_to_cart",
        "description": "Adds an item to the Etsy cart using item name or link.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Etsy.",
                "required": true
            },
            {
                "name": "item_name",
                "type": "string",
                "description": "Name of the item to add to the cart.",
                "required": false
            },
            {
                "name": "item_link",
                "type": "string",
                "description": "Link of the item to add to the cart. The item ID will be extracted from this link.",
                "required": false
            },
            {
                "name": "quantity",
                "type": "int",
                "description": "The quantity of the item to add to the cart.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "etsy_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the user is logged in with a valid session ID before performing cart operations."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "suggest_daily_calorie_intake",
        "description": "Provides a rough estimate of daily calorie needs based on BMI and activity level inferred from daily steps.",
        "parameters": [
            {
                "name": "daily_steps",
                "type": "int",
                "description": "The average number of steps taken per day.",
                "required": true
            },
            {
                "name": "assigned_at_birth",
                "type": "string",
                "description": "The individual's biological assignment at birth.",
                "required": true,
                "enum": [
                    "male",
                    "female",
                    "other"
                ]
            },
            {
                "name": "bmi",
                "type": "float",
                "description": "The individual's Body Mass Index (BMI).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "calculate_bmi",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "bmi",
                "reason": "To use BMI as the basis for calculating daily calorie needs."
            },
            {
                "name": "get_steps_per_day",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "daily_steps",
                "reason": "To estimate activity level from the user's daily step count."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "recommend_hydration_intake",
        "description": "Recommends daily water intake (in liters) based on BMI.",
        "parameters": [
            {
                "name": "bmi",
                "type": "float",
                "description": "The individual's Body Mass Index (BMI).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "calculate_bmi",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "bmi",
                "reason": "To estimate hydration needs based on BMI."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To adjust hydration recommendations according to environmental conditions."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "weight_kg",
                "reason": "To convert the weight if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "evaluate_heart_rate_status",
        "description": "Evaluates whether the individual's current heart rate (in bpm) is within a healthy range based on their age.",
        "parameters": [
            {
                "name": "current_bpm",
                "type": "int",
                "description": "The individual's current heart rate in beats per minute.",
                "required": true
            },
            {
                "name": "age",
                "type": "int",
                "description": "The individual's age in years.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_bpm",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "current_bpm",
                "reason": "To retrieve the current heart rate for assessment."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "age",
                "reason": "To optionally use the user profile to fill in the age parameter."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "suggest_exercise_duration",
        "description": "Suggests a daily exercise duration based on current step count to encourage a healthier activity level.",
        "parameters": [
            {
                "name": "daily_steps",
                "type": "int",
                "description": "The average number of steps taken per day.",
                "required": true
            },
            {
                "name": "current_bpm",
                "type": "int",
                "description": "The individual's current heart rate in beats per minute.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_steps_per_day",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "daily_steps",
                "reason": "To gauge the individual's baseline activity level."
            },
            {
                "name": "get_bpm",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "current_bpm",
                "reason": "To retrieve the current heart rate for assessment."
            },
            {
                "name": "get_current_weather",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To provide weather insights for delays in reaching the theater."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_personalized_medical_advice",
        "description": "Fetches personalized medical advice or educational content from an online medical resource based on the requested topic.",
        "parameters": [
            {
                "name": "topic",
                "type": "string",
                "description": "The medical topic of interest (e.g., 'nutrition', 'heart health', 'diabetes management').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure an internet connection is available for retrieving updated medical information."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_daily_calorie_burn",
        "description": "Estimates the daily calorie burn based on the individual's step count and weight.",
        "parameters": [
            {
                "name": "weight_kg",
                "type": "float",
                "description": "The individual's weight in kilograms.",
                "required": true
            },
            {
                "name": "daily_steps",
                "type": "int",
                "description": "Average number of steps per day.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_steps_per_day",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "daily_steps",
                "reason": "To estimate calorie burn from the individual's daily step count."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "weight_kg",
                "reason": "To convert the weight if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "recommend_exercise_attire",
        "description": "Suggests appropriate clothing for outdoor exercise based on current weather conditions.",
        "parameters": [
            {
                "name": "weather_condition",
                "type": "string",
                "description": "The current weather condition (e.g., sunny, rainy, cold).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_weather",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "weather_condition",
                "reason": "To choose suitable attire for outdoor exercise based on environmental conditions."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_ideal_body_fat_percentage",
        "description": "Estimates a target body fat percentage range based on user's assignment at birth and BMI.",
        "parameters": [
            {
                "name": "assigned_at_birth",
                "type": "string",
                "description": "User's assignment at birth (male, female, other).",
                "required": true,
                "enum": [
                    "male",
                    "female",
                    "other"
                ]
            },
            {
                "name": "bmi",
                "type": "float",
                "description": "The individual's Body Mass Index (BMI).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "calculate_bmi",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "bmi",
                "reason": "To use BMI as the basis for calculating daily calorie needs."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_ideal_protein_intake",
        "description": "Calculates recommended daily protein intake based on weight and activity level.",
        "parameters": [
            {
                "name": "bmi",
                "type": "float",
                "description": "The individual's Body Mass Index (BMI).",
                "required": true
            },
            {
                "name": "activity_level",
                "type": "string",
                "description": "User's activity level.",
                "required": true,
                "enum": [
                    "sedentary",
                    "moderate",
                    "active"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "calculate_bmi",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "bmi",
                "reason": "To use BMI as the basis for calculating daily calorie needs."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "estimate_daily_fiber_intake",
        "description": "Estimates recommended daily fiber intake based on age, assignment at brith, and weight.",
        "parameters": [
            {
                "name": "age",
                "type": "int",
                "description": "User's age in years.",
                "required": true
            },
            {
                "name": "assigned_at_birth",
                "type": "string",
                "description": "User's assignment at birth (male, female, other).",
                "required": true,
                "enum": [
                    "male",
                    "female",
                    "other"
                ]
            },
            {
                "name": "weight_kg",
                "type": "float",
                "description": "User's weight in kilograms.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "weight_kg",
                "reason": "To convert the weight if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_online_nutrition_guidelines",
        "description": "Retrieves general nutrition guidelines and dietary recommendations from an online source.",
        "parameters": [
            {
                "name": "diet_preference",
                "type": "string",
                "description": "User's dietary preference.",
                "required": true,
                "enum": [
                    "vegan",
                    "vegetarian",
                    "omnivore"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access online resources for nutrition guidelines."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "evaluate_skin_protection_needs",
        "description": "Evaluates what kind of skin protection (e.g., sunscreen, moisturizer) is advisable based on current weather conditions.",
        "parameters": [],
        "depends_on": [
            {
                "name": "get_current_weather",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "weather_condition",
                "reason": "To recommend appropriate skin protection based on environmental factors."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "recommend_stretching_routine",
        "description": "Suggests a frequency and type of stretching routine based on the user's daily step count.",
        "parameters": [
            {
                "name": "daily_steps",
                "type": "int",
                "description": "User's average daily steps.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_steps_per_day",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "daily_steps",
                "reason": "To determine how often the user should stretch depending on their activity level."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "suggest_meditation_duration",
        "description": "Recommends a daily meditation duration based on the user's activity level (daily steps) as a proxy for stress.",
        "parameters": [
            {
                "name": "daily_steps",
                "type": "int",
                "description": "User's average daily steps.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_steps_per_day",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "daily_steps",
                "reason": "To adjust meditation duration; lower steps may indicate more sedentary behavior potentially requiring longer relaxation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "legal_document_search",
        "description": "Searches for relevant legal documents such as case laws, statutes, or regulations.",
        "parameters": [
            {
                "name": "keywords",
                "type": "string",
                "description": "Search terms or phrases.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access online legal databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "case_law_summarizer",
        "description": "Summarizes key points, judgments, and precedents from a selected case.",
        "parameters": [
            {
                "name": "case_id",
                "type": "string",
                "description": "Unique identifier for the legal case.",
                "required": true
            },
            {
                "name": "summary_length",
                "type": "string",
                "description": "Desired length of the summary (e.g., brief, detailed).",
                "enum": [
                    "brief",
                    "detailed"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_case_id",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "case_id",
                "reason": "To retrieve the case_id before summarizing."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch case details from online repositories."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "legal_deadline_tracker",
        "description": "Tracks and reminds users of critical legal deadlines for filings or hearings.",
        "parameters": [
            {
                "name": "case_id",
                "type": "string",
                "description": "Unique identifier for the legal case.",
                "required": true
            },
            {
                "name": "deadline_date",
                "type": "string",
                "description": "Deadline for the legal task.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_case_id",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "case_id",
                "reason": "To retrieve the case_id for tracking deadlines."
            },
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To issue timely reminders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "jurisdiction_checker",
        "description": "Identifies the appropriate jurisdiction based on a given location or legal issue.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User\u2019s or case-related location.",
                "required": true
            },
            {
                "name": "issue_type",
                "type": "string",
                "description": "Type of legal issue.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To determine jurisdiction."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "legal_citation_generator",
        "description": "Generates properly formatted legal citations for case laws, statutes, or scholarly articles.",
        "parameters": [
            {
                "name": "source_type",
                "type": "string",
                "description": "Type of source (e.g., case law, statute, article).",
                "enum": [
                    "case law",
                    "statute",
                    "article"
                ],
                "required": true
            },
            {
                "name": "source_details",
                "type": "string",
                "description": "Relevant details of the source.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify citation rules online."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "case_outcome_predictor",
        "description": "Provides a probability of success or failure for a case based on past precedents and legal data.",
        "parameters": [
            {
                "name": "case_facts",
                "type": "string",
                "description": "Key facts of the case.",
                "required": true
            },
            {
                "name": "jurisdiction",
                "type": "string",
                "description": "Jurisdiction of the case.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data for analysis."
            },
            {
                "name": "jurisdiction_checker",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "jurisdiction",
                "reason": "To consider the current legal landscape."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "contract_clause_library",
        "description": "Provides a searchable library of commonly used contract clauses.",
        "parameters": [
            {
                "name": "clause_type",
                "type": "string",
                "description": "Type of clause (e.g., confidentiality, indemnity).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access and update the clause library."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "legal_brief_generator",
        "description": "Assists in drafting legal briefs by organizing case facts, issues, and arguments.",
        "parameters": [
            {
                "name": "case_facts",
                "type": "string",
                "description": "Key facts of the case.",
                "required": true
            },
            {
                "name": "legal_issues",
                "type": "string",
                "description": "Issues to address in the brief.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve case law or precedent support."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "legal_research_timer",
        "description": "Tracks the time spent on legal research tasks for billing or productivity purposes.",
        "parameters": [
            {
                "name": "task_id",
                "type": "string",
                "description": "A generated unique identifier for the research task.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To track and log research durations."
            },
            {
                "name": "generate_unique_ID",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "task_id",
                "reason": "To assign a unique identifier for tracking purposes."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "precedent_analyzer",
        "description": "Analyzes the precedential value of a case by evaluating its citations and subsequent treatments.",
        "parameters": [
            {
                "name": "case_id",
                "type": "string",
                "description": "Identifier for the case.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch citation and treatment data."
            },
            {
                "name": "get_case_id",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "case_id",
                "reason": "To retrieve the case for analysis."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "court_date_scheduler",
        "description": "Helps schedule court appearances or hearings by checking for conflicts in availability.",
        "parameters": [
            {
                "name": "preferred_date",
                "type": "string",
                "description": "Preferred date for the hearing.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_date",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check calendar conflicts."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure notifications are on for scheduled court dates."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "legal_risk_assessment_tool",
        "description": "Evaluates the potential risks involved in a legal transaction or strategy.",
        "parameters": [
            {
                "name": "legal_transaction_details",
                "type": "string",
                "description": "Key details of the transaction.",
                "required": true
            },
            {
                "name": "jurisdiction",
                "type": "string",
                "description": "Jurisdiction of the transaction.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To access online legal risk databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "witness_preparation_checklist",
        "description": "Provides a checklist for preparing witnesses for deposition or trial.",
        "parameters": [
            {
                "name": "case_id",
                "type": "string",
                "description": "Identifier for the case.",
                "required": true
            },
            {
                "name": "witness_name",
                "type": "string",
                "description": "Name of the witness.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_case_id",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "case_id",
                "reason": "To retrieve case details for witness preparation."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch guidelines or examples for preparation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fresh_direct_login",
        "description": "Logs the user into their FreshDirect account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email is in a valid format."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available before attempting to log in."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fresh_direct_get_recipe",
        "description": "Fetches a recipe from the FreshDirect app based on the provided recipe name.",
        "parameters": [
            {
                "name": "recipe_name",
                "type": "string",
                "description": "The name of the recipe to fetch.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "fresh_direct_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Requires the user to be logged in to access recipe data."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to fetch recipe data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fresh_direct_get_ingredients",
        "description": "Fetches ingredients for a given recipe from FreshDirect using the recipe ID.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "fresh_direct_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "fresh_direct_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to access recipe ingredients."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to fetch ingredients data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fresh_direct_add_to_favorites",
        "description": "Adds a specified recipe to the user's favorites on FreshDirect.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe to add to favorites.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "fresh_direct_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "fresh_direct_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to modify favorites."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to add recipes to favorites."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fresh_direct_remove_from_favorites",
        "description": "Removes a specified recipe from the user's favorites on FreshDirect.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe to remove from favorites.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "fresh_direct_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "fresh_direct_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to modify favorites."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to remove recipes from favorites."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "allrecipes_login",
        "description": "Logs the user into their AllRecipes account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available before attempting to log in."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email is in a valid format."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "allrecipes_get_recipe",
        "description": "Fetches a recipe from the AllRecipes app based on the provided recipe name.",
        "parameters": [
            {
                "name": "recipe_name",
                "type": "string",
                "description": "The name of the recipe to fetch.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "allrecipes_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Requires the user to be logged in to access recipe data."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to fetch recipe data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "allrecipes_get_ingredients",
        "description": "Fetches ingredients for a given recipe from AllRecipes using the recipe ID.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "allrecipes_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "allrecipes_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to access recipe ingredients."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to fetch ingredients data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "allrecipes_add_to_favorites",
        "description": "Adds a specified recipe to the user's favorites on AllRecipes.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe to add to favorites.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "allrecipes_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "allrecipes_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to modify favorites."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to add recipes to favorites."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "allrecipes_remove_from_favorites",
        "description": "Removes a specified recipe from the user's favorites on AllRecipes.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe to remove from favorites.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "allrecipes_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "allrecipes_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to modify favorites."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to remove recipes from favorites."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "yummly_login",
        "description": "Logs the user into their Yummly account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available before attempting to log in."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the email is in a valid format."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "yummly_get_recipe",
        "description": "Fetches a recipe from the Yummly app based on the provided recipe name.",
        "parameters": [
            {
                "name": "recipe_name",
                "type": "string",
                "description": "The name of the recipe to fetch.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "yummly_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Requires the user to be logged in to access recipe data."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to fetch recipe data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "yummly_get_ingredients",
        "description": "Fetches ingredients for a given recipe from Yummly using the recipe ID.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "yummly_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "yummly_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to access recipe ingredients."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to fetch ingredients data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "yummly_add_to_favorites",
        "description": "Adds a specified recipe to the user's favorites on Yummly.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe to add to favorites.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "yummly_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "yummly_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to modify favorites."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to add recipes to favorites."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "yummly_remove_from_favorites",
        "description": "Removes a specified recipe from the user's favorites on Yummly.",
        "parameters": [
            {
                "name": "recipe_id",
                "type": "string",
                "description": "The unique identifier of the recipe to remove from favorites.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "yummly_get_recipe",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "recipe_id",
                "reason": "Requires the recipe ID obtained from fetching the recipe."
            },
            {
                "name": "yummly_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "Ensures the user is authenticated to modify favorites."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures that Wi-Fi is available to remove recipes from favorites."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_population_by_country",
        "description": "Retrieves the total population for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "description": "The country code for the target country.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve the population data.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate the country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity for retrieving data."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_population_by_city",
        "description": "Retrieves the total population for a specific city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "description": "The city code for the target city.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve the population data.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate the city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity for retrieving data."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_population_by_sub_region",
        "description": "Retrieves the total population for a given sub-region, such as a state or province.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "description": "The sub-region code.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve the population data.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate the sub-region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity for retrieving data."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_population_growth_rate_by_country",
        "description": "Retrieves the population growth rate for a country over a specified period.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "start_year",
                "type": "int",
                "required": true,
                "description": "The starting year of the period for growth rate calculation."
            },
            {
                "name": "end_year",
                "type": "int",
                "required": true,
                "description": "The ending year of the period for growth rate calculation."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "start_year,end_year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_population_growth_rate_by_city",
        "description": "Retrieves the population growth rate for a city over a specified period.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "start_year",
                "type": "int",
                "required": true,
                "description": "The starting year for the growth rate calculation."
            },
            {
                "name": "end_year",
                "type": "int",
                "required": true,
                "description": "The ending year of the period for growth rate calculation."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "start_year,end_year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_population_growth_rate_by_sub_region",
        "description": "Retrieves the population growth rate for a sub-region over a specified period.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "start_year",
                "type": "int",
                "required": true,
                "description": "The starting year for the growth rate calculation."
            },
            {
                "name": "end_year",
                "type": "int",
                "required": true,
                "description": "The ending year of the period for growth rate calculation."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "start_year,end_year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_gdp_by_country",
        "description": "Retrieves the total GDP for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the GDP data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_gdp_per_capita_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives GDP per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get GDP per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_gdp_per_capita_by_country",
        "description": "Retrieves the GDP per capita for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the GDP per capita data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_total_gdp_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total country GDP for per capita calculations."
            },
            {
                "name": "get_total_population_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate GDP per capita."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_gdp_by_city",
        "description": "Retrieves the total GDP for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the GDP data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "start_year,end_year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_gdp_per_capita_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives GDP per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get GDP per capita."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_gdp_per_capita_by_city",
        "description": "Retrieves the GDP per capita for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the GDP per capita data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_total_gdp_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total city GDP for per capita calculations."
            },
            {
                "name": "get_total_population_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate GDP per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_gdp_by_sub_region",
        "description": "Retrieves the total GDP for a given sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the GDP data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_gdp_per_capita_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives GDP per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get GDP per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_gdp_per_capita_by_sub_region",
        "description": "Retrieves the GDP per capita for a given sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the GDP per capita data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_total_gdp_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives GDP per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get GDP per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_government_revenue_by_country",
        "description": "Retrieves total government revenue for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the government revenue data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_government_revenue_per_capita_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives revenue per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get revenue per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_government_revenue_per_capita_by_country",
        "description": "Retrieves government revenue on a per-capita basis for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the revenue data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_total_government_revenue_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total country government revenue for per capita calculations."
            },
            {
                "name": "get_total_population_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate government revenue per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_government_revenue_by_city",
        "description": "Retrieves total government revenue for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the revenue data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_government_revenue_per_capita_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives revenue per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get revenue per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_government_revenue_per_capita_by_city",
        "description": "Retrieves government revenue on a per-capita basis for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the revenue data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_total_government_revenue_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total city government revenue for per capita calculations."
            },
            {
                "name": "get_total_population_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate government revenue per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_government_revenue_by_sub_region",
        "description": "Retrieves total government revenue for a given sub_region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the government revenue data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_government_revenue_per_capita_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives revenue per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get revenue per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_government_revenue_per_capita_by_sub_region",
        "description": "Retrieves government revenue on a per-capita basis for a given sub_region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the revenue data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_total_government_revenue_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total sub_region government revenue for per capita calculations."
            },
            {
                "name": "get_total_population_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate government revenue per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_unemployment_rate_by_country",
        "description": "Retrieves the unemployment rate for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the unemployment rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_unemployment_rate_by_city",
        "description": "Retrieves the unemployment rate for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the unemployment rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_unemployment_rate_by_sub_region",
        "description": "Retrieves the unemployment rate for a given sub-region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the unemployment rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_income_distribution_by_country",
        "description": "Retrieves income distribution data (e.g., Gini coefficient or quintiles) for a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the income distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_income_distribution_by_city",
        "description": "Retrieves income distribution data (e.g., Gini coefficient or quintiles) for a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the income distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_income_distribution_by_sub_region",
        "description": "Retrieves income distribution data (e.g., Gini coefficient or quintiles) for a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the income distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_home_ownership_rate_by_country",
        "description": "Retrieves the homeownership rate for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the homeownership rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_home_ownership_rate_by_city",
        "description": "Retrieves the homeownership rate for a specific city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the homeownership rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_home_ownership_rate_by_sub_region",
        "description": "Retrieves the homeownership rate for a specific sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the homeownership rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_median_rent_by_country",
        "description": "Retrieves the median monthly rent for a specific country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the median rent data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_median_rent_by_city",
        "description": "Retrieves the median monthly rent for a specific city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the median rent data."
            },
            {
                "name": "rooms",
                "type": "int",
                "required": true,
                "description": "The number of rooms in the rental property."
            },
            {
                "name": "baths",
                "type": "float",
                "required": false,
                "description": "The number of bathrooms in the rental property."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_median_rent_by_sub_region",
        "description": "Retrieves the median monthly rent for a specific sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the median rent data."
            },
            {
                "name": "rooms",
                "type": "int",
                "required": true,
                "description": "The number of rooms in the rental property."
            },
            {
                "name": "baths",
                "type": "float",
                "required": false,
                "description": "The number of bathrooms in the property."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_foreclosure_rate_by_country",
        "description": "Retrieves the foreclosure rate (e.g. per 1,000 housing units) for a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the foreclosure rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate the country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_foreclosure_rate_by_city",
        "description": "Retrieves the foreclosure rate for a specific city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the foreclosure rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate the city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_foreclosure_rate_by_sub_region",
        "description": "Retrieves the foreclosure rate for a given sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the foreclosure rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate the sub-region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_marriage_rate_by_country",
        "description": "Retrieves the marriage rate (per 1,000 people) for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the marriage rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_marriage_rate_by_city",
        "description": "Retrieves the marriage rate (per 1,000 people) for a specific city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the marriage rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_marriage_rate_by_sub_region",
        "description": "Retrieves the marriage rate (per 1,000 people) for a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the marriage rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_divorce_rate_by_country",
        "description": "Retrieves the divorce rate (per 1,000 people) for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the divorce rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_divorce_rate_by_city",
        "description": "Retrieves the divorce rate (per 1,000 people) for a specific city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the divorce rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_divorce_rate_by_sub_region",
        "description": "Retrieves the divorce rate (per 1,000 people) for a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the divorce rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_average_household_size_by_country",
        "description": "Retrieves the average household size for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the average household size data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate the country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_average_household_size_by_city",
        "description": "Retrieves the average household size for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the average household size data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate the city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_average_household_size_by_sub_region",
        "description": "Retrieves the average household size for a given sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the average household size data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate the sub-region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_life_expectancy_by_country",
        "description": "Retrieves life expectancy at birth for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve life expectancy data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_life_expectancy_by_city",
        "description": "Retrieves life expectancy at birth for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve life expectancy data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_life_expectancy_by_sub_region",
        "description": "Retrieves life expectancy at birth for a given sub-region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve life expectancy data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_insurance_coverage_by_country",
        "description": "Retrieves the percentage of the population with health insurance coverage for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the insurance coverage data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_insurance_coverage_by_city",
        "description": "Retrieves the percentage of the population with health insurance coverage for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the insurance coverage data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_insurance_coverage_by_sub_region",
        "description": "Retrieves the percentage of the population with health insurance coverage for a given sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the insurance coverage data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_obesity_rate_by_country",
        "description": "Retrieves the obesity rate for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the obesity rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_obesity_rate_by_city",
        "description": "Retrieves the obesity rate for a specific city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the obesity rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_obesity_rate_by_sub_region",
        "description": "Retrieves the obesity rate for a sub-region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the obesity rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_high_school_graduation_rate_by_country",
        "description": "Retrieves the high school graduation rate for a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the graduation rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_high_school_graduation_rate_by_city",
        "description": "Retrieves the high school graduation rate for a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the graduation rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_high_school_graduation_rate_by_sub_region",
        "description": "Retrieves the high school graduation rate for a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the graduation rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_college_enrollment_by_country",
        "description": "Retrieves the percentage of the population enrolled in college for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve college enrollment data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_college_enrollment_by_city",
        "description": "Retrieves the percentage of the population enrolled in college for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve college enrollment data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_college_enrollment_by_sub_region",
        "description": "Retrieves the percentage of the population enrolled in college for a given sub_region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve college enrollment data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_labor_participation_rate_by_country",
        "description": "Retrieves the labor force participation rate for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the labor participation rate."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_labor_participation_rate_by_city",
        "description": "Retrieves the labor force participation rate for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the labor participation rate."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_labor_participation_rate_by_sub_region",
        "description": "Retrieves the labor force participation rate for a given sub_region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the labor participation rate."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_job_creation_by_country",
        "description": "Retrieves statistics about new jobs created in a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve job creation data."
            },
            {
                "name": "sector",
                "type": "string",
                "required": false,
                "description": "The economic sector for which to retrieve job creation data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_job_creation_by_city",
        "description": "Retrieves statistics about new jobs created in a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve job creation data."
            },
            {
                "name": "sector",
                "type": "string",
                "required": false,
                "description": "The industry sector for which to retrieve job creation data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_job_creation_by_sub_region",
        "description": "Retrieves statistics about new jobs created in a given sub_region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve job creation data."
            },
            {
                "name": "sector",
                "type": "string",
                "required": false,
                "description": "The sector for which to retrieve job creation data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_average_commute_time_by_country",
        "description": "Retrieves the average commute time in minutes for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the average commute time data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity for data."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_average_commute_time_by_city",
        "description": "Retrieves the average commute time in minutes for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the average commute time data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity for data."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_average_commute_time_by_sub_region",
        "description": "Retrieves the average commute time in minutes for a given sub_region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the commute time data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity for data."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_car_ownership_rate_by_country",
        "description": "Retrieves the number of cars per household or per 1,000 people in a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve car ownership data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_car_ownership_rate_by_city",
        "description": "Retrieves the number of cars per household or per 1,000 people in a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve car ownership data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_car_ownership_rate_by_sub_region",
        "description": "Retrieves the number of cars per household or per 1,000 people in a sub_region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve car ownership data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_public_transit_usage_by_country",
        "description": "Retrieves the percentage of the country's population using public transit.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve public transit usage data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_public_transit_usage_by_city",
        "description": "Retrieves the percentage of the city's population using public transit.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve public transit usage data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_public_transit_usage_by_sub_region",
        "description": "Retrieves the percentage of the sub-region's population using public transit.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve public transit usage data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_recycling_rate_by_country",
        "description": "Retrieves the percentage of waste recycled for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve recycling rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_recycling_rate_by_city",
        "description": "Retrieves the percentage of waste recycled for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the recycling rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_recycling_rate_by_sub_region",
        "description": "Retrieves the percentage of waste recycled for a given sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the recycling rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_violent_crime_rate_by_country",
        "description": "Retrieves the violent crime rate per 1,000 residents in a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the violent crime rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_violent_crime_rate_by_city",
        "description": "Retrieves the violent crime rate per 1,000 residents in a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the violent crime rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_violent_crime_rate_by_sub_region",
        "description": "Retrieves the violent crime rate per 1,000 residents in a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the violent crime rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_property_crime_rate_by_country",
        "description": "Retrieves the property crime rate per 1,000 residents in a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the property crime rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_property_crime_rate_by_city",
        "description": "Retrieves the property crime rate per 1,000 residents in a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the property crime rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_property_crime_rate_by_sub_region",
        "description": "Retrieves the property crime rate per 1,000 residents in a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the property crime rate data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_police_force_size_by_country",
        "description": "Retrieves the number of police officers (total) for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the police force size data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_police_force_size_by_city",
        "description": "Retrieves the number of police officers (total) for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the police force size data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_police_force_size_by_sub_region",
        "description": "Retrieves the number of police officers (total) for a given sub_region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the police force size data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_government_spending_by_country",
        "description": "Retrieves total government spending for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve government spending data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_government_spending_per_capita_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives spending per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get spending per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_government_spending_per_capita_by_country",
        "description": "Retrieves government spending on a per-capita basis for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve government spending data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_total_government_spending_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total country government spending for per capita calculations."
            },
            {
                "name": "get_total_population_by_country",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate government spending per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_government_spending_by_city",
        "description": "Retrieves total government spending for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the spending data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_government_spending_per_capita_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives spending per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get spending per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_government_spending_per_capita_by_city",
        "description": "Retrieves government spending on a per-capita basis for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the government spending data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_total_government_spending_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total city government spending for per capita calculations."
            },
            {
                "name": "get_total_population_by_city",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate government spending per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_total_government_spending_by_sub_region",
        "description": "Retrieves total government spending for a given sub_region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve government spending data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_government_spending_per_capita_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives spending per capita and wants to get population."
            },
            {
                "name": "get_total_population_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "If user gives population and wants to get spending per capita."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_government_spending_per_capita_by_sub_region",
        "description": "Retrieves government spending on a per-capita basis for a given sub_region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the government spending data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_total_government_spending_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Total sub_region government spending for per capita calculations."
            },
            {
                "name": "get_total_population_by_sub_region",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed to calculate government spending per capita."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_voter_turnout_by_country",
        "description": "Retrieves voter turnout percentage for recent elections in a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "election_year",
                "type": "int",
                "required": true,
                "description": "The year of the election for which to retrieve voter turnout data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "election_year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_voter_turnout_by_city",
        "description": "Retrieves voter turnout percentage for recent elections in a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "election_year",
                "type": "int",
                "required": true,
                "description": "The year of the election for which to retrieve voter turnout data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "election_year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_voter_turnout_by_sub_region",
        "description": "Retrieves voter turnout percentage for recent elections in a sub_region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub_region code for the target sub_region."
            },
            {
                "name": "election_year",
                "type": "int",
                "required": true,
                "description": "The year of the election for which to retrieve voter turnout data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub_region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "election_year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_age_distribution_by_country",
        "description": "Retrieves population by age group for a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve age distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_age_distribution_by_city",
        "description": "Retrieves population by age group for a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the age distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_age_distribution_by_sub_region",
        "description": "Retrieves population by age group for a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the age distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_race_ethnicity_distribution_by_country",
        "description": "Retrieves the population by race/ethnicity categories for a country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve race/ethnicity distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_race_ethnicity_distribution_by_city",
        "description": "Retrieves the population by race/ethnicity categories for a city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve race/ethnicity distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_race_ethnicity_distribution_by_sub_region",
        "description": "Retrieves the population by race/ethnicity categories for a sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve race/ethnicity distribution data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_median_age_by_country",
        "description": "Retrieves the median age for a given country and year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the median age data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_median_age_by_city",
        "description": "Retrieves the median age for a given city and year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the median age data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_median_age_by_sub_region",
        "description": "Retrieves the median age for a given sub-region and year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve the median age data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_crop_production_by_country",
        "description": "Retrieves data on crop production by type for a specified country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "crop_type",
                "type": "string",
                "required": true,
                "description": "The type of crop."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve crop production data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_crop_production_by_city",
        "description": "Retrieves data on crop production by type for a specified city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "crop_type",
                "type": "string",
                "required": true,
                "description": "The type of crop for which to retrieve production data."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve crop production data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_crop_production_by_sub_region",
        "description": "Retrieves data on crop production by type for a specified sub-region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "crop_type",
                "type": "string",
                "required": true,
                "description": "The type of crop."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve crop production data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_visitor_counts_by_country",
        "description": "Retrieves the number of visitors (tourists) to a country in a given year.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve visitor data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_visitor_counts_by_city",
        "description": "Retrieves the number of visitors (tourists) to a city in a given year.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve visitor data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_visitor_counts_by_sub_region",
        "description": "Retrieves the number of visitors to a specific sub-region in a given year.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve visitor data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_domestic_migration_by_country",
        "description": "Retrieves data on internal migration flows within a country (movement between regions).",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "required": true,
                "description": "The country code for the target country."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve migration data."
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "Validate country code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_domestic_migration_by_city",
        "description": "Retrieves data on internal migration flows within a city (movement between neighborhoods or districts).",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "required": true,
                "description": "The city code for the target city."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve migration data."
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "Validate city code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_domestic_migration_by_sub_region",
        "description": "Retrieves data on internal migration flows within a sub-region (movement between smaller areas within the sub-region).",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "required": true,
                "description": "The sub-region code for the target sub-region."
            },
            {
                "name": "year",
                "type": "int",
                "required": true,
                "description": "The year for which to retrieve migration data."
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "Validate sub-region code."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Connectivity."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_poverty_rate_by_country",
        "description": "Retrieves the poverty rate for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "description": "The country code for the target country.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve the poverty rate.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "To validate the country code before retrieving the poverty rate."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure connectivity for retrieving the poverty rate."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_poverty_rate_by_city",
        "description": "Retrieves the poverty rate for a specific city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "description": "The city code for the target city.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve the poverty rate.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "To validate the city code before retrieving the poverty rate."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure connectivity for retrieving the poverty rate."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_poverty_rate_by_sub_region",
        "description": "Retrieves the poverty rate for a specific sub-region, such as a state in the US or a province in Canada.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "description": "The sub-region code for the target state or province.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve the poverty rate.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "To validate the sub-region code before retrieving the poverty rate."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure connectivity for retrieving the poverty rate."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_immigration_statistics_by_country",
        "description": "Retrieves immigration statistics for a given country.",
        "parameters": [
            {
                "name": "country_code",
                "type": "string",
                "description": "The country code for the target country.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve immigration statistics.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_country_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "country_code",
                "reason": "To validate the country code before retrieving immigration statistics."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure connectivity for retrieving immigration data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_immigration_statistics_by_city",
        "description": "Retrieves immigration statistics for a given city.",
        "parameters": [
            {
                "name": "city_code",
                "type": "string",
                "description": "The city code for the target city.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve immigration statistics.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_city_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "city_code",
                "reason": "To validate the city code before retrieving immigration statistics."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure connectivity for retrieving immigration data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_immigration_statistics_by_sub_region",
        "description": "Retrieves immigration statistics for a given sub_region.",
        "parameters": [
            {
                "name": "sub_region_code",
                "type": "string",
                "description": "The sub_region code for the target area.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which to retrieve immigration statistics.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_sub_region_code",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "sub_region_code",
                "reason": "To validate the sub_region code before retrieving immigration statistics."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To get the current year if the user doesn't provide it."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure connectivity for retrieving immigration data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_revenue",
        "description": "Fetches the revenue for a given stock ticker and year (optionally by quarter).",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which revenue data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which revenue data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To ensure the requested year is valid."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_gross_profit",
        "description": "Fetches the gross profit for a given stock ticker and year (optionally by quarter).",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which gross profit data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which gross profit data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To ensure the requested year is valid."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_operating_income",
        "description": "Fetches the operating income (EBIT) for a given stock ticker and year (optionally by quarter).",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which operating income data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which operating income data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To ensure the requested year is valid."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_ebitda",
        "description": "Fetches the EBITDA for a given stock ticker and year (optionally by quarter).",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which EBITDA data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which EBITDA data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To verify the date for the calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_interest_coverage_ratio",
        "description": "Calculates how many times a company can cover its interest expenses using EBITDA (Interest Coverage Ratio = EBITDA / Interest Expense).",
        "parameters": [
            {
                "name": "ebitda",
                "type": "float",
                "description": "Earnings before interest, taxes, depreciation, and amortization.",
                "required": true
            },
            {
                "name": "interest_expense",
                "type": "float",
                "description": "The total interest expense the company pays.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_ebitda",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "ebitda",
                "reason": "Retrieves the EBITDA value for the ICR calculation."
            },
            {
                "name": "get_interest_expense",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "interest_expense",
                "reason": "Retrieves the company's interest expense for the ICR calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_net_income",
        "description": "Fetches the net income for a given stock ticker and year (optionally by quarter).",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which net income data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which net income data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To verify the date for the calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_eps",
        "description": "Fetches the Earnings Per Share (EPS) for a given stock ticker and year (optionally by quarter).",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which EPS data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which EPS data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            },
            {
                "name": "get_net_income",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Used to calculate EPS."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_interest_expense",
        "description": "Fetches the interest expense for a given stock ticker, year, and (optionally) quarter.",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol for which interest expense data is required.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which interest expense data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The specific quarter for which interest expense data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify that the provided stock ticker is valid."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to retrieve interest expense data from an online financial database."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To verify the date for the calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_shares_outstanding",
        "description": "Fetches the number of shares outstanding for a given stock ticker, year, and optional quarter.",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which shares outstanding data is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which shares outstanding is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To calculate relative years."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "analyze_equity_structure",
        "description": "Analyzes a company's equity structure by examining the number of shares outstanding and distribution among shareholders (optionally by quarter).",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which equity structure analysis is required.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which equity structure data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To calculate relative years."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_dps",
        "description": "Fetches the dividends per share (DPS) for a given stock ticker, year, and optional quarter.",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which DPS data is required.",
                "required": false
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "The quarter for which DPS data is required (optional).",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To verify the stock ticker exists."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To fetch data from online financial databases."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To verify the date for the calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_market_capitalization",
        "description": "Calculates the market capitalization using share price and the number of outstanding shares.",
        "parameters": [
            {
                "name": "stock_price",
                "type": "float",
                "description": "The current share price.",
                "required": true
            },
            {
                "name": "outstanding_shares",
                "type": "float",
                "description": "The total number of shares outstanding.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_stock_price",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_price",
                "reason": "Retrieves the share price for the calculation."
            },
            {
                "name": "get_shares_outstanding",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "outstanding_shares",
                "reason": "Retrieves the total shares outstanding for the calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_p_e_ratio",
        "description": "Calculates the Price-to-Earnings (P/E) ratio for a stock using its EPS and stock price.",
        "parameters": [
            {
                "name": "eps",
                "type": "float",
                "description": "Earnings per share.",
                "required": true
            },
            {
                "name": "stock_price",
                "type": "float",
                "description": "The current stock price.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_eps",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "eps",
                "reason": "Uses EPS to compute the P/E ratio."
            },
            {
                "name": "get_current_stock_price",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_price",
                "reason": "Uses the stock price to compute the P/E ratio."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_peg_ratio",
        "description": "Calculates the Price/Earnings-to-Growth (PEG) ratio using the P/E ratio and EPS growth rate.",
        "parameters": [
            {
                "name": "p_e_ratio",
                "type": "float",
                "description": "The Price-to-Earnings ratio.",
                "required": true
            },
            {
                "name": "eps_growth_rate",
                "type": "float",
                "description": "The projected EPS growth rate (as a decimal).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "calculate_p_e_ratio",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "p_e_ratio",
                "reason": "Provides the computed P/E ratio."
            },
            {
                "name": "get_eps_growth_rate",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "eps_growth_rate",
                "reason": "Fetches or calculates the EPS growth rate needed for PEG ratio."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_eps_growth_rate",
        "description": "Fetches the EPS growth rate (as a decimal) for a given stock ticker, year, and optionally quarter.",
        "parameters": [
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "The stock ticker symbol.",
                "required": true
            },
            {
                "name": "year",
                "type": "int",
                "description": "The year for which the EPS growth rate is requested.",
                "required": true
            },
            {
                "name": "quarter",
                "type": "string",
                "description": "An optional quarter (q1, q2, q3, q4) if growth rate data can be segmented by quarter.",
                "required": false,
                "enum": [
                    "q1",
                    "q2",
                    "q3",
                    "q4"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker",
                "reason": "Verifies that the provided stock ticker is valid and standardized."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to retrieve EPS growth rate data from an online financial database."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "year",
                "reason": "To verify the date for the calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_dividend_yield",
        "description": "Calculates the dividend yield for a stock using dividends per share (DPS) and stock price.",
        "parameters": [
            {
                "name": "dps",
                "type": "float",
                "description": "Annual dividends paid per share (DPS).",
                "required": true
            },
            {
                "name": "stock_price",
                "type": "float",
                "description": "The current stock price.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_dps",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "dps",
                "reason": "Fetches the DPS value to plug into the dividend yield formula."
            },
            {
                "name": "get_current_stock_price",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_price",
                "reason": "Fetches the current stock price to plug into the dividend yield formula."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_earnings_yield",
        "description": "Calculates the earnings yield using EPS and share price (EPS / share price).",
        "parameters": [
            {
                "name": "eps",
                "type": "float",
                "description": "Earnings per share.",
                "required": true
            },
            {
                "name": "share_price",
                "type": "float",
                "description": "The current share price.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_eps",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "eps",
                "reason": "Retrieves the EPS used in the earnings yield calculation."
            },
            {
                "name": "get_current_stock_price",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "share_price",
                "reason": "Retrieves the share price to complete the earnings yield formula."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_dividend_payout_ratio",
        "description": "Determines the dividend payout ratio using DPS and EPS.",
        "parameters": [
            {
                "name": "dps",
                "type": "float",
                "description": "Dividends per share (DPS).",
                "required": true
            },
            {
                "name": "eps",
                "type": "float",
                "description": "Earnings per share (EPS).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_dps",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "dps",
                "reason": "Fetches DPS for the payout ratio calculation."
            },
            {
                "name": "get_eps",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "eps",
                "reason": "Fetches EPS for the payout ratio calculation."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "calculate_price_to_sales_ratio",
        "description": "Calculates the Price-to-Sales ratio using market cap and revenue (Market Cap / Revenue).",
        "parameters": [
            {
                "name": "market_cap",
                "type": "float",
                "description": "The market capitalization of the company.",
                "required": true
            },
            {
                "name": "revenue",
                "type": "float",
                "description": "The annual (or relevant period) revenue.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "calculate_market_capitalization",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "market_cap",
                "reason": "Obtains the market cap needed for the P/S ratio."
            },
            {
                "name": "get_revenue",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "revenue",
                "reason": "Obtains the revenue needed for the P/S ratio."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "compare_stock_performance",
        "description": "Compares the performance of two stocks over a given period.",
        "parameters": [
            {
                "name": "stock_ticker_1",
                "type": "string",
                "description": "First stock ticker symbol.",
                "required": true
            },
            {
                "name": "stock_ticker_2",
                "type": "string",
                "description": "Second stock ticker symbol.",
                "required": true
            },
            {
                "name": "start_date",
                "type": "string",
                "description": "Start date for performance comparison in YYYY-MM-DD format.",
                "required": true
            },
            {
                "name": "end_date",
                "type": "string",
                "description": "End date for performance comparison in YYYY-MM-DD format.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_stock_ticker",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "stock_ticker_1,stock_ticker_2",
                "reason": "To verify the stock tickers exist."
            },
            {
                "name": "get_current_date",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "start_date,end_date",
                "reason": "To validate the provided start and end dates."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "robinhood_user_login",
        "description": "Logs the user into their Robinhood account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Robinhood account login."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Retrieves user-specific credentials for Robinhood login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity before sending login request."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_robinhood_account_balance",
        "description": "Fetches the user\u2019s current Robinhood account balance and cash reserves.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Robinhood.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "robinhood_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity before retrieving account data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_stock_robinhood",
        "description": "Places a market buy order for a specified stock in the user\u2019s Robinhood account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Robinhood.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to buy.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to buy.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "robinhood_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a buy order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "sell_stock_robinhood",
        "description": "Places a market sell order for a specified stock in the user\u2019s Robinhood account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Robinhood.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to sell.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to sell.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "robinhood_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a sell order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_robinhood_order_history",
        "description": "Retrieves the user\u2019s recent order history, including buy/sell details and execution status.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Robinhood.",
                "required": true
            },
            {
                "name": "time_range",
                "type": "string",
                "description": "Time range for which to fetch order history.",
                "enum": [
                    "1w",
                    "1m",
                    "3m",
                    "6m",
                    "1y",
                    "all"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "robinhood_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be logged in with a valid session ID to access order history."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to fetch order history."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "charles_schwab_user_login",
        "description": "Logs the user into their Charles Schwab account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Charles Schwab account login."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Retrieves user-specific credentials for Charles Schwab login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity before sending login request."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_charles_schwab_account_balance",
        "description": "Fetches the user\u2019s current Charles Schwab account balance and cash reserves.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Charles Schwab.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "charles_schwab_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity before retrieving account data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_stock_charles_schwab",
        "description": "Places a market buy order for a specified stock in the user\u2019s Charles Schwab account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Charles Schwab.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to buy.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to buy.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "charles_schwab_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a buy order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "sell_stock_charles_schwab",
        "description": "Places a market sell order for a specified stock in the user\u2019s Charles Schwab account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Charles Schwab.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to sell.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to sell.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "charles_schwab_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a sell order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_charles_schwab_order_history",
        "description": "Retrieves the user\u2019s recent order history, including buy/sell details and execution status.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Charles Schwab.",
                "required": true
            },
            {
                "name": "time_range",
                "type": "string",
                "description": "Time range for which to fetch order history.",
                "enum": [
                    "1w",
                    "1m",
                    "3m",
                    "6m",
                    "1y",
                    "all"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "charles_schwab_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be logged in with a valid session ID to access order history."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to fetch order history."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fidelity_user_login",
        "description": "Logs the user into their Fidelity account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before Fidelity account login."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Retrieves user-specific credentials for Fidelity login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity before sending login request."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_fidelity_account_balance",
        "description": "Fetches the user\u2019s current Fidelity account balance and cash reserves.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Fidelity.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "fidelity_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity before retrieving account data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_stock_fidelity",
        "description": "Places a market buy order for a specified stock in the user\u2019s Fidelity account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Fidelity.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to buy.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to buy.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "fidelity_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a buy order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "sell_stock_fidelity",
        "description": "Places a market sell order for a specified stock in the user\u2019s Fidelity account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Fidelity.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to sell.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to sell.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "fidelity_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a sell order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_fidelity_order_history",
        "description": "Retrieves the user\u2019s recent order history, including buy/sell details and execution status.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Fidelity.",
                "required": true
            },
            {
                "name": "time_range",
                "type": "string",
                "description": "Time range for which to fetch order history.",
                "enum": [
                    "1w",
                    "1m",
                    "3m",
                    "6m",
                    "1y",
                    "all"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "fidelity_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be logged in with a valid session ID to access order history."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to fetch order history."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "webull_user_login",
        "description": "Logs the user into their WeBull account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before WeBull account login."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Retrieves user-specific credentials for WeBull login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity before sending login request."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_webull_account_balance",
        "description": "Fetches the user\u2019s current WeBull account balance and cash reserves.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into WeBull.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "webull_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity before retrieving account data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_stock_webull",
        "description": "Places a market buy order for a specified stock in the user\u2019s WeBull account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into WeBull.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to buy.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to buy.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "webull_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a buy order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "sell_stock_webull",
        "description": "Places a market sell order for a specified stock in the user\u2019s WeBull account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into WeBull.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to sell.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to sell.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "webull_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a sell order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_webull_order_history",
        "description": "Retrieves the user\u2019s recent order history, including buy/sell details and execution status.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into WeBull.",
                "required": true
            },
            {
                "name": "time_range",
                "type": "string",
                "description": "Time range for which to fetch order history.",
                "enum": [
                    "1w",
                    "1m",
                    "3m",
                    "6m",
                    "1y",
                    "all"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "webull_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be logged in with a valid session ID to access order history."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to fetch order history."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "nerd_wallet_user_login",
        "description": "Logs the user into their NerdWallet account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before NerdWallet account login."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Retrieves user-specific credentials for NerdWallet login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity before sending login request."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_nerd_wallet_account_balance",
        "description": "Fetches the user\u2019s current NerdWallet account balance and cash reserves.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into NerdWallet.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "nerd_wallet_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity before retrieving account data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_stock_nerd_wallet",
        "description": "Places a market buy order for a specified stock in the user\u2019s NerdWallet account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into NerdWallet.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to buy.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to buy.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "nerd_wallet_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a buy order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "sell_stock_nerd_wallet",
        "description": "Places a market sell order for a specified stock in the user\u2019s NerdWallet account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into NerdWallet.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to sell.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to sell.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "nerd_wallet_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a sell order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_nerd_wallet_order_history",
        "description": "Retrieves the user\u2019s recent order history, including buy/sell details and execution status.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into NerdWallet.",
                "required": true
            },
            {
                "name": "time_range",
                "type": "string",
                "description": "Time range for which to fetch order history.",
                "enum": [
                    "1w",
                    "1m",
                    "3m",
                    "6m",
                    "1y",
                    "all"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "nerd_wallet_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be logged in with a valid session ID to access order history."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to fetch order history."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "etrade_user_login",
        "description": "Logs the user into their ETrade account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before ETrade account login."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Retrieves user-specific credentials for ETrade login."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity before sending login request."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "get_etrade_account_balance",
        "description": "Fetches the user\u2019s current ETrade account balance and cash reserves.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into ETrade.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "etrade_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated with a valid session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity before retrieving account data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "buy_stock_etrade",
        "description": "Places a market buy order for a specified stock in the user\u2019s ETrade account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into ETrade.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to buy.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to buy.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "etrade_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a buy order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "sell_stock_etrade",
        "description": "Places a market sell order for a specified stock in the user\u2019s ETrade account.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into ETrade.",
                "required": true
            },
            {
                "name": "stock_ticker",
                "type": "string",
                "description": "Ticker symbol of the stock to sell.",
                "required": true
            },
            {
                "name": "quantity",
                "type": "float",
                "description": "Number of shares (or fractional shares) to sell.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "etrade_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must have a valid session ID before placing a sell order."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity for placing orders."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "fetch_etrade_order_history",
        "description": "Retrieves the user\u2019s recent order history, including buy/sell details and execution status.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into ETrade.",
                "required": true
            },
            {
                "name": "time_range",
                "type": "string",
                "description": "Time range for which to fetch order history.",
                "enum": [
                    "1w",
                    "1m",
                    "3m",
                    "6m",
                    "1y",
                    "all"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "etrade_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be logged in with a valid session ID to access order history."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures internet connectivity to fetch order history."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_religious_events",
        "description": "Lists upcoming religious events like sermons, festivals, or prayer sessions in the user's area.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User's current location.",
                "required": true
            },
            {
                "name": "religion",
                "type": "string",
                "description": "Religion type (e.g., 'Christianity', 'Islam', 'Judaism', 'Hinduism').",
                "enum": [
                    "Christianity",
                    "Islam",
                    "Judaism",
                    "Hinduism"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Retrieves the user's location to find local events."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures connectivity to look up upcoming events."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "create_prayer_schedule",
        "description": "Generates a daily prayer schedule based on the user's location and religious affiliation.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User's current location.",
                "required": true
            },
            {
                "name": "religion",
                "type": "string",
                "description": "Religion type for which prayer times are generated.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Ensures accurate prayer times based on the user's location."
            },
            {
                "name": "get_current_time",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Aligns prayer schedules with the current date and time."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Retrieves up-to-date prayer times from online sources."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_religious_text",
        "description": "Finds and provides access to specific religious texts such as the Bible, Quran, Torah, or Vedas.",
        "parameters": [
            {
                "name": "text_name",
                "type": "string",
                "description": "Name of the religious text.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "Preferred language for the text (optional).",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches the religious text from an online resource."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "Determines the text language if not explicitly provided."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "search_bible_verse",
        "description": "Searches for a Bible verse based on a selected topic or emotion (e.g., 'hope', 'forgiveness').",
        "parameters": [
            {
                "name": "topic",
                "type": "string",
                "description": "Topic or emotion for the search (e.g., 'hope', 'forgiveness').",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches relevant verses from an online Bible database."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearest_church",
        "description": "Finds the nearest church for worship or community gatherings.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User's current location.",
                "required": true
            },
            {
                "name": "denomination_type",
                "type": "string",
                "description": "Specific denomination to filter churches.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Ensures accurate location to find local churches."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches real-time data from online maps or services."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearest_mosque",
        "description": "Finds the nearest mosque for daily prayers or Friday congregations.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User's current location.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Ensures accurate location to find local mosques."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches real-time data from online maps or services."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "search_quran",
        "description": "Searches for Quranic verses based on a keyword, phrase, or topic.",
        "parameters": [
            {
                "name": "query",
                "type": "string",
                "description": "Keyword or phrase for the search.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "Language preference for the verse (optional).",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "Determines language for the search results, if not provided."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires online connectivity to perform text search."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_buddhist_temple",
        "description": "Finds the nearest Buddhist temple for meditation or community gatherings.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User's current location.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Ensures accurate location to find local temples."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches real-time data from online maps or services."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "search_quran_verse",
        "description": "Searches for a Quranic verse based on a specific topic or emotion (e.g., 'patience', 'gratitude').",
        "parameters": [
            {
                "name": "topic",
                "type": "string",
                "description": "Topic or emotion for the verse (e.g., 'patience', 'gratitude').",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "Preferred language for the verse (optional).",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "Displays verses in the user's preferred language, if not specified."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches verse data from an online Quran database."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "search_torah",
        "description": "Searches the Torah for specific passages or topics.",
        "parameters": [
            {
                "name": "query",
                "type": "string",
                "description": "Keyword or topic to search for in the Torah.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "Language preference for the search (optional).",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "Provides the text in the user's preferred language if specified."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires an online connection to perform the search."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearest_synagogue",
        "description": "Finds the nearest synagogue for prayer and community activities.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User's current location.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Ensures accurate location to find local synagogues."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches real-time data from online maps or services."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_nearest_gurdwara",
        "description": "Finds the nearest Gurdwara for Sikh prayers and community meals.",
        "parameters": [
            {
                "name": "location",
                "type": "string",
                "description": "User's current location.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "get_current_location",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "location",
                "reason": "Ensures accurate location to find local Gurdwaras."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Fetches real-time data from online maps or services."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "spirit_user_login",
        "description": "Logs the user into their Spirit account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Spirit session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Spirit session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "spirit_select_entertainment",
        "description": "Allows Spirit users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Spirit.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "spirit_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Spirit user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Spirit session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Spirit session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "spirit_view_flight_status",
        "description": "Provides Spirit users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Spirit.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The Spirit flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "spirit_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Spirit user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Spirit session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Spirit session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "spirit_update_travel_preferences",
        "description": "Allows Spirit users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Spirit.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "spirit_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Spirit user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Spirit session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Spirit session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "spirit_manage_notifications",
        "description": "Allows Spirit users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Spirit.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "spirit_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Spirit user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Spirit session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Spirit session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the Spirit app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "spirit_find_my_bags",
        "description": "Allows Spirit users to locate and track their checked baggage based on a unique bag tag or reference code.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from spirit_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Unique baggage tag or claim reference.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "spirit_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Must have a valid Spirit session ID before accessing baggage data."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks Wi-Fi connectivity to retrieve baggage info."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures airplane mode status is appropriate during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "qatar_user_login",
        "description": "Logs the user into their Qatar Airways account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko",
                    "ar"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Qatar Airways session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Qatar Airways session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "qatar_select_entertainment",
        "description": "Allows Qatar Airways users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Qatar Airways.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "qatar_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Qatar Airways user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Qatar Airways session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Qatar Airways session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "qatar_view_flight_status",
        "description": "Provides Qatar Airways users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Qatar Airways.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The Qatar Airways flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "qatar_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Qatar Airways user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Qatar Airways session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Qatar Airways session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "qatar_update_travel_preferences",
        "description": "Allows Qatar Airways users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Qatar Airways.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "qatar_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Qatar Airways user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Qatar Airways session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Qatar Airways session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "qatar_manage_notifications",
        "description": "Allows Qatar Airways users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Qatar Airways.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "qatar_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Qatar Airways user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Qatar Airways session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Qatar Airways session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the Qatar Airways app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "qatar_find_my_bags",
        "description": "Enables Qatar Airways users to trace their checked bags using a unique bag tag or claim code.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from qatar_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Unique baggage tag or claim reference.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "qatar_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Requires a valid Qatar session ID to access baggage details."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed for connectivity to baggage-tracking services."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks airplane mode status during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "frontier_user_login",
        "description": "Logs the user into their Frontier account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure airplane mode is enabled during the Frontier session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Frontier session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "frontier_select_entertainment",
        "description": "Allows Frontier users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Frontier.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "frontier_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Frontier user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Frontier session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Frontier session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "frontier_view_flight_status",
        "description": "Provides Frontier users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Frontier.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The Frontier flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "frontier_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Frontier user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Frontier session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Frontier session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "frontier_update_travel_preferences",
        "description": "Allows Frontier users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Frontier.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "frontier_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Frontier user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Frontier session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Frontier session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "frontier_manage_notifications",
        "description": "Allows Frontier users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Frontier.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "frontier_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Frontier user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Frontier session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Frontier session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the Frontier app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "frontier_find_my_bags",
        "description": "Allows Frontier users to locate and track their checked baggage in real time using a bag tag or reference code.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from frontier_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Unique baggage tag or reference for the user\u2019s checked bag.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "frontier_user_login",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Must have a valid Frontier session ID to look up baggage."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures an active internet connection to fetch baggage data."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks airplane mode status during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "lufthansa_user_login",
        "description": "Logs the user into their Lufthansa account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Lufthansa session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Lufthansa session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "lufthansa_select_entertainment",
        "description": "Allows Lufthansa users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Lufthansa.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "lufthansa_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Lufthansa user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Lufthansa session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Lufthansa session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "lufthansa_view_flight_status",
        "description": "Provides Lufthansa users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Lufthansa.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The Lufthansa flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "lufthansa_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Lufthansa user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Lufthansa session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Lufthansa session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "lufthansa_update_travel_preferences",
        "description": "Allows Lufthansa users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Lufthansa.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "lufthansa_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Lufthansa user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Lufthansa session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Lufthansa session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "lufthansa_manage_notifications",
        "description": "Allows Lufthansa users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Lufthansa.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "lufthansa_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Lufthansa user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Lufthansa session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Lufthansa session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the Lufthansa app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "lufthansa_find_my_bags",
        "description": "Enables Lufthansa users to locate their checked baggage using a unique bag tag or claim code.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from lufthansa_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Unique baggage tag or reference number.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "lufthansa_user_login",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Requires a valid Lufthansa session ID to track baggage."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks connectivity for retrieving real-time baggage info."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Ensures airplane mode status is appropriate during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "emirates_user_login",
        "description": "Logs the user into their Emirates account using their email and password.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address of the user.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the user account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko",
                    "ar"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Emirates session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Emirates session."
            },
            {
                "name": "get_system_language",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "language",
                "reason": "To set the user interface language based on the system language if not provided."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness to view the application if brightness is low."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the app is installed before attempting login."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "emirates_select_entertainment",
        "description": "Allows Emirates users to browse and select a movie, TV show, or game to watch or play during the flight.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Emirates.",
                "required": true
            },
            {
                "name": "category",
                "type": "string",
                "description": "The category of entertainment.",
                "enum": [
                    "movie",
                    "tv_show",
                    "game"
                ],
                "required": true
            },
            {
                "name": "title",
                "type": "string",
                "description": "The title of the selected entertainment option.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "emirates_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Emirates user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Emirates session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Emirates session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "emirates_view_flight_status",
        "description": "Provides Emirates users real-time updates on the status of a flight based on flight number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Emirates.",
                "required": true
            },
            {
                "name": "flight_number",
                "type": "string",
                "description": "The Emirates flight number to check the status for.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "emirates_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Emirates user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Emirates session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Emirates session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "emirates_update_travel_preferences",
        "description": "Allows Emirates users to update their travel preferences, such as seat selection and meal preferences.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Emirates.",
                "required": true
            },
            {
                "name": "seat_preference",
                "type": "string",
                "description": "The preferred seating option.",
                "enum": [
                    "window",
                    "aisle",
                    "middle"
                ],
                "required": false
            },
            {
                "name": "meal_preference",
                "type": "string",
                "description": "The preferred meal type.",
                "enum": [
                    "vegetarian",
                    "non-vegetarian",
                    "kosher",
                    "halal"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "emirates_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Emirates user is logged in and has a valid session ID."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Emirates session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Emirates session."
            },
            {
                "name": "get_user_profile",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To retrieve user profile data for updating preferences that may help the preferences."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "emirates_manage_notifications",
        "description": "Allows Emirates users to configure their notification preferences, including email and push notifications.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "The session ID obtained after logging into Emirates.",
                "required": true
            },
            {
                "name": "email_notifications",
                "type": "boolean",
                "description": "Enable or disable email notifications.",
                "required": false
            },
            {
                "name": "push_notifications",
                "type": "boolean",
                "description": "Enable or disable push notifications.",
                "required": false
            },
            {
                "name": "email",
                "type": "string",
                "description": "The user's email address for receiving notifications.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "emirates_user_login",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "To ensure the Emirates user is logged in and has a valid session ID."
            },
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure airplane mode is enabled during the Emirates session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure Wi-Fi is available during the Emirates session."
            },
            {
                "name": "get_notifications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To ensure the current notification settings are active for the Emirates app."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "emirates_find_my_bags",
        "description": "Allows Emirates users to track their checked baggage using a bag tag or reference number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from emirates_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Unique bag tag or claim reference.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "emirates_user_login",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user has an authenticated Emirates session ID."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needed for connecting to the baggage-tracking service."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks if airplane mode is toggled during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "united_find_my_bags",
        "description": "Allows United Airlines users to track and locate their checked baggage via a bag tag or claim code.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from united_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Unique bag tag or claim reference for the user's luggage.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "united_user_login",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Requires an authenticated United session to retrieve baggage details."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires online connectivity for baggage-tracking updates."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks if airplane mode is enabled during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "jetblue_find_my_bags",
        "description": "Allows JetBlue users to look up their checked baggage status by bag tag or reference number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from jetblue_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Baggage tag or claim reference assigned to the user's luggage.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "jetblue_user_login",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Needs a valid JetBlue login session to view baggage details."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires Wi-Fi connectivity to fetch baggage status."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks airplane mode setting during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "american_find_my_bags",
        "description": "Allows American Airlines users to locate their checked baggage using a bag tag or reference code.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from american_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "Unique bag claim reference for the user\u2019s luggage.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "american_user_login",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is logged in to American Airlines."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needs online access to retrieve baggage tracking details."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks airplane mode status during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "southwest_find_my_bags",
        "description": "Allows Southwest Airlines users to track their checked baggage using a bag tag or reference number.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID from southwest_user_login.",
                "required": true
            },
            {
                "name": "bag_tag",
                "type": "string",
                "description": "The baggage claim tag or reference code for the user's luggage.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "southwest_user_login",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Requires an authenticated Southwest login session."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Needs an active connection to find baggage status."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks airplane mode settings during the session."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "login_to_tesla_account",
        "description": "Authenticates the user to their Tesla account, verifying credentials and fetching stored vehicle data if needed.",
        "parameters": [
            {
                "name": "email",
                "type": "string",
                "description": "The email address linked to the Tesla account.",
                "required": true
            },
            {
                "name": "password",
                "type": "string",
                "description": "The password for the Tesla account.",
                "required": true
            },
            {
                "name": "language",
                "type": "string",
                "description": "The preferred language for the user interface.",
                "required": false,
                "default": "en",
                "enum": [
                    "en",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "zh",
                    "ja",
                    "ko"
                ]
            }
        ],
        "depends_on": [
            {
                "name": "validate_email",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "email",
                "reason": "To ensure the provided email address is valid before sending."
            },
            {
                "name": "get_installed_applications",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Checks whether the Tesla app or relevant integration is installed."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Verifies an internet connection for authentication."
            },
            {
                "name": "get_cellular_service_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Backup connectivity if Wi-Fi is unavailable."
            },
            {
                "name": "get_screen_brightness",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To check the current screen brightness and turn up brightness for the vehicle."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_start_stop_climate_control",
        "description": "Starts or stops the vehicle\u2019s HVAC system, optionally setting a target temperature.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "turn_on",
                "type": "boolean",
                "description": "True to start HVAC, false to turn it off.",
                "required": true
            },
            {
                "name": "target_temperature_c",
                "type": "float",
                "description": "Optional target temperature in Celsius.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated with Tesla before changing climate settings."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "target_temperature_c",
                "reason": "To convert the temperature if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_schedule_climate_preconditioning",
        "description": "Schedules the vehicle to preheat or precool the cabin at a specified time.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "preconditioning_time",
                "type": "string",
                "description": "The scheduled time to start HVAC (HH:MM format).",
                "required": true
            },
            {
                "name": "target_temperature_c",
                "type": "float",
                "description": "The desired temperature in Celsius when preconditioning starts.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Requires authentication to schedule climate operations."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "preconditioning_time",
                "reason": "Ensures the scheduled time is valid and in the future."
            },
            {
                "name": "convert_to_desired_unit",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "target_temperature_c",
                "reason": "To convert the distance if from_unit != to_unit."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_check_or_set_charging_schedule",
        "description": "Views or updates the times when the vehicle is allowed to charge, optimizing for off-peak electricity or user preference.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "start_time",
                "type": "string",
                "description": "Optional start time for charging schedule (HH:MM format).",
                "required": false
            },
            {
                "name": "end_time",
                "type": "string",
                "description": "Optional end time for charging schedule (HH:MM format).",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Confirms the user is logged in to Tesla to change charging preferences."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Allows validating that the schedule isn't in the past."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_monitor_battery_status",
        "description": "Retrieves the current battery level, estimated range, and whether the car is charging.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Requires a valid Tesla session to access vehicle battery data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_enable_disable_valet_mode",
        "description": "Activates or deactivates Valet Mode, limiting speed, trunk access, and some controls for safety.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "enable_valet",
                "type": "boolean",
                "description": "True to enable Valet Mode, false to disable.",
                "required": true
            },
            {
                "name": "pin_code",
                "type": "string",
                "description": "Valet PIN code if required by the vehicle settings.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures authentication before modifying Valet Mode settings."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_summon_vehicle",
        "description": "Initiates Tesla\u2019s Summon feature, moving the car forward or backward a short distance or to the user\u2019s location.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "summon_direction",
                "type": "string",
                "description": "Either 'forward' or 'reverse'.",
                "enum": [
                    "forward",
                    "reverse"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be authenticated and in range to summon the vehicle."
            },
            {
                "name": "get_current_location",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "To confirm the user\u2019s position if using Smart Summon."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_adjust_autopilot_fsd_settings",
        "description": "Updates autopilot or Full Self-Driving (FSD) preferences, such as follow distance or lane-change behavior.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "follow_distance",
                "type": "int",
                "description": "Headway setting (1-7).",
                "required": false
            },
            {
                "name": "lane_change_preference",
                "type": "string",
                "description": "When to initiate lane changes (e.g., 'mild', 'average', 'aggressive').",
                "enum": [
                    "mild",
                    "average",
                    "aggressive"
                ],
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user has permission to alter Autopilot settings."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_schedule_install_software_update",
        "description": "Schedules a Tesla software update at a specified time, optionally displaying release notes.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "scheduled_time",
                "type": "string",
                "description": "When to begin installing the update (HH:MM format).",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be authenticated to schedule updates."
            },
            {
                "name": "get_current_time",
                "dependence_type": "PARAMETER_INDIRECTLY_DEPENDS_ON",
                "parameter_name": "scheduled_time",
                "reason": "Confirms the scheduled time is in the future."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_activate_deactivate_sentry_mode",
        "description": "Activates or deactivates Sentry Mode, which monitors the vehicle\u2019s surroundings and alerts the user of incidents.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "activate_sentry",
                "type": "boolean",
                "description": "True to enable Sentry Mode, false to disable.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated and can modify Sentry Mode settings."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "find_tesla_charger_tool",
        "description": "Locates nearby Tesla chargers (Superchargers or Destination Chargers) based on the user\u2019s current location.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "charger_type",
                "type": "string",
                "description": "Type of Tesla charger to find (e.g., 'supercharger', 'destination_charger').",
                "enum": [
                    "supercharger",
                    "destination_charger"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Verifies the user is authenticated to access Tesla\u2019s charger network info."
            },
            {
                "name": "get_current_location",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Uses the user's location to suggest nearby chargers."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires an online connection to fetch charger data."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "is_tesla_charger_location_full",
        "description": "Checks if a specific Tesla charger location has available stalls or if it's at capacity.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "charger_location_id",
                "type": "string",
                "description": "The unique ID of the Tesla charger station to query.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Requires authentication to access Tesla network charger details."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Internet connectivity needed to check real-time stall availability."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_remote_lock_unlock_doors",
        "description": "Remotely locks or unlocks the Tesla vehicle's doors.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "lock_doors",
                "type": "boolean",
                "description": "True to lock the doors, false to unlock them.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated before modifying vehicle door locks."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires connectivity to send lock/unlock commands to the car."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_open_trunk_or_frunk",
        "description": "Opens either the trunk or front trunk (frunk) of the Tesla vehicle remotely.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "compartment",
                "type": "string",
                "description": "Which compartment to open ('trunk' or 'frunk').",
                "enum": [
                    "trunk",
                    "frunk"
                ],
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "User must be authenticated to open trunk or frunk."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Verifies online connectivity to send the command to open the chosen compartment."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "tesla_limit_speed_for_teen_driver",
        "description": "Sets or unsets a maximum speed limit on the Tesla vehicle for safety, often used for teen or guest drivers.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID after logging into Tesla.",
                "required": true
            },
            {
                "name": "activate_limit",
                "type": "boolean",
                "description": "True to enable speed limit, false to disable it.",
                "required": true
            },
            {
                "name": "max_speed_kmh",
                "type": "int",
                "description": "The maximum allowed speed in km/h if speed limit is being enabled.",
                "required": false
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated to set a speed limit."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires connectivity to communicate with the vehicle to set speed constraints."
            }
        ],
        "func_type": "regular"
    },
    {
        "name": "flash_tesla_headlights",
        "description": "Remotely flashes the Tesla vehicle's headlights, making the car easier to locate in a parking lot or dark area.",
        "parameters": [
            {
                "name": "session_id",
                "type": "string",
                "description": "Session ID obtained after logging into Tesla.",
                "required": true
            }
        ],
        "depends_on": [
            {
                "name": "login_to_tesla_account",
                "dependence_type": "PARAMETER_DIRECTLY_DEPENDS_ON",
                "parameter_name": "session_id",
                "reason": "Ensures the user is authenticated before triggering a remote headlights flash."
            },
            {
                "name": "get_wifi_status",
                "dependence_type": "TOOL_DIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Requires internet access to send the command to the vehicle."
            },
            {
                "name": "get_airplane_mode_status",
                "dependence_type": "TOOL_INDIRECTLY_DEPENDS_ON",
                "parameter_name": null,
                "reason": "Verifies that airplane mode status won't block remote commands."
            }
        ],
        "func_type": "regular"
    }
]